syntax = "proto3";

package skip.ironbird;

option go_package = "github.com/skip-mev/ironbird/server/gen/ironbird";

service IronbirdService {
    rpc CreateWorkflow(CreateWorkflowRequest) returns (WorkflowResponse) {}
    rpc GetWorkflow(GetWorkflowRequest) returns (Workflow) {}
    rpc ListWorkflows(ListWorkflowsRequest) returns (WorkflowListResponse) {}
    rpc CancelWorkflow(CancelWorkflowRequest) returns (WorkflowResponse) {}
    rpc SignalWorkflow(SignalWorkflowRequest) returns (WorkflowResponse) {}

    rpc RunLoadTest(RunLoadTestRequest) returns (WorkflowResponse) {}

    rpc UpdateWorkflowData(UpdateWorkflowDataRequest) returns (WorkflowResponse) {}

    rpc CreateWorkflowTemplate(CreateWorkflowTemplateRequest) returns (WorkflowTemplateResponse) {}
    rpc GetWorkflowTemplate(GetWorkflowTemplateRequest) returns (WorkflowTemplate) {}
    rpc ListWorkflowTemplates(ListWorkflowTemplatesRequest) returns (WorkflowTemplateListResponse) {}
    rpc UpdateWorkflowTemplate(UpdateWorkflowTemplateRequest) returns (WorkflowTemplateResponse) {}
    rpc DeleteWorkflowTemplate(DeleteWorkflowTemplateRequest) returns (WorkflowTemplateResponse) {}
    
    rpc ExecuteWorkflowTemplate(ExecuteWorkflowTemplateRequest) returns (WorkflowResponse) {}
    rpc GetTemplateRunHistory(GetTemplateRunHistoryRequest) returns (TemplateRunHistoryResponse) {}

}

// Request and response messages

message CreateWorkflowRequest {
    string repo = 1;
    string sha = 2;
    bool isEvmChain = 3;
    ChainConfig chain_config = 4;
    string runner_type = 5;
    // json encoded loadtest spec.
    string encoded_load_test_spec = 6;
    bool long_running_testnet = 8;
    string testnet_duration = 9;
    int32 num_wallets = 10;
    bool launch_load_balancer = 11;
    string catalyst_version = 12;
    string base_mnemonic = 13;
}

message GenesisKV {
    string key = 1;
    string value = 2;
}

message RegionConfig {
    string name = 1;
    uint64 num_of_nodes = 2;
    uint64 num_of_validators = 3;
}

message ChainConfig {
    string name = 1;
    uint64 num_of_nodes = 2;
    uint64 num_of_validators = 3;
    repeated GenesisKV genesis_modifications = 4;
    string image = 5;
    string custom_app_config = 6;
    string custom_consensus_config = 7;
    string custom_client_config = 8;
    bool set_seed_node = 9;
    bool set_persistent_peers = 10;
    repeated RegionConfig region_configs = 11;
    string version = 12;
}


message GetWorkflowRequest {
    string workflow_id = 1;
}

message ListWorkflowsRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message CancelWorkflowRequest {
    string workflow_id = 1;
}

message SignalWorkflowRequest {
    string workflow_id = 1;
    string signal_name = 2;
}

message RunLoadTestRequest {
    string workflow_id = 1;
    string load_test_spec = 2;
}

message WorkflowResponse {
    string workflow_id = 1;
}

message Node {
    string name = 1;
    string address = 2;
    string rpc = 3;
    string lcd = 4;
    string grpc = 5;
    string evmrpc = 6;
    string evmws = 7;
}

message WalletInfo {
    string faucet_address = 1;
    string faucet_mnemonic = 2;
    repeated string user_addresses = 3;
    repeated string user_mnemonics = 4;
}

message Workflow {
    string workflow_id = 1;
    string status = 2;
    repeated Node nodes = 3;
    repeated Node validators = 4;
    repeated Node load_balancers = 5;
    map<string, string> monitoring = 6;
    CreateWorkflowRequest config = 7;
    string load_test_spec = 17;
    WalletInfo wallets = 18;
    string provider = 19;
    string start_time = 20;
    string end_time = 21;
}

message WorkflowSummary {
    string workflow_id = 1;
    string status = 2;
    string start_time = 3;
    string repo = 4;
    string sha = 5;
    string provider = 6;
    string template_id = 7;
    string run_name = 8;
}

message UpdateWorkflowDataRequest {
    string workflow_id = 1;
    repeated Node load_balancers = 2;
    map<string, string> monitoring = 3;
    repeated Node nodes = 4;
    repeated Node validators = 5;
    WalletInfo wallets = 6;
    string provider = 7;
}

message WorkflowListResponse {
    repeated WorkflowSummary workflows = 1;
    int32 count = 2;
}

message WorkflowTemplate {
    string id = 1;
    string description = 2;
    CreateWorkflowRequest template_config = 3; 
    string created_at = 4;
    string created_by = 5;
}

message CreateWorkflowTemplateRequest {
    string id = 1;
    string description = 2;
    CreateWorkflowRequest template_config = 3; 
}

message GetWorkflowTemplateRequest {
    string id = 1;
}

message ListWorkflowTemplatesRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message UpdateWorkflowTemplateRequest {
    string id = 1;
    string description = 2;
    CreateWorkflowRequest template_config = 3;
}

message DeleteWorkflowTemplateRequest {
    string id = 1;
}

message WorkflowTemplateResponse {
    string id = 1;
}

message WorkflowTemplateSummary {
    string id = 1;
    string description = 2;
    string created_at = 3;
    int32 run_count = 4; 
}

message WorkflowTemplateListResponse {
    repeated WorkflowTemplateSummary templates = 1;
    int32 count = 2;
}

message ExecuteWorkflowTemplateRequest {
    string id = 1;
    string sha = 2; 
    string run_name = 3; 
}

message TemplateRun {
    string run_id = 1;
    string workflow_id = 2; 
    string template_id = 3;
    string sha = 4;
    string run_name = 5;
    string status = 6;
    string started_at = 7;
    string completed_at = 8;
    map<string, string> monitoring_links = 9; 
    string provider = 10;
}

message GetTemplateRunHistoryRequest {
    string id = 1;
    int32 limit = 2;
    int32 offset = 3;
}

message TemplateRunHistoryResponse {
    repeated TemplateRun runs = 1;
    int32 count = 2;
}
