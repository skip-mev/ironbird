// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: server/proto/ironbird.proto

package ironbird

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWorkflowRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Repo               string                 `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Sha                string                 `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Evm                bool                   `protobuf:"varint,3,opt,name=evm,proto3" json:"evm,omitempty"`
	ChainConfig        *ChainConfig           `protobuf:"bytes,4,opt,name=chain_config,json=chainConfig,proto3" json:"chain_config,omitempty"`
	RunnerType         string                 `protobuf:"bytes,5,opt,name=runner_type,json=runnerType,proto3" json:"runner_type,omitempty"`
	LoadTestSpec       *LoadTestSpec          `protobuf:"bytes,6,opt,name=load_test_spec,json=loadTestSpec,proto3" json:"load_test_spec,omitempty"`
	LongRunningTestnet bool                   `protobuf:"varint,7,opt,name=long_running_testnet,json=longRunningTestnet,proto3" json:"long_running_testnet,omitempty"`
	TestnetDuration    int64                  `protobuf:"varint,8,opt,name=testnet_duration,json=testnetDuration,proto3" json:"testnet_duration,omitempty"`
	NumWallets         int32                  `protobuf:"varint,9,opt,name=num_wallets,json=numWallets,proto3" json:"num_wallets,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkflowRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *CreateWorkflowRequest) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *CreateWorkflowRequest) GetEvm() bool {
	if x != nil {
		return x.Evm
	}
	return false
}

func (x *CreateWorkflowRequest) GetChainConfig() *ChainConfig {
	if x != nil {
		return x.ChainConfig
	}
	return nil
}

func (x *CreateWorkflowRequest) GetRunnerType() string {
	if x != nil {
		return x.RunnerType
	}
	return ""
}

func (x *CreateWorkflowRequest) GetLoadTestSpec() *LoadTestSpec {
	if x != nil {
		return x.LoadTestSpec
	}
	return nil
}

func (x *CreateWorkflowRequest) GetLongRunningTestnet() bool {
	if x != nil {
		return x.LongRunningTestnet
	}
	return false
}

func (x *CreateWorkflowRequest) GetTestnetDuration() int64 {
	if x != nil {
		return x.TestnetDuration
	}
	return 0
}

func (x *CreateWorkflowRequest) GetNumWallets() int32 {
	if x != nil {
		return x.NumWallets
	}
	return 0
}

type GenesisKV struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenesisKV) Reset() {
	*x = GenesisKV{}
	mi := &file_server_proto_ironbird_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisKV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisKV) ProtoMessage() {}

func (x *GenesisKV) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisKV.ProtoReflect.Descriptor instead.
func (*GenesisKV) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{1}
}

func (x *GenesisKV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GenesisKV) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ChainConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumOfNodes           uint64                 `protobuf:"varint,2,opt,name=num_of_nodes,json=numOfNodes,proto3" json:"num_of_nodes,omitempty"`
	NumOfValidators      uint64                 `protobuf:"varint,3,opt,name=num_of_validators,json=numOfValidators,proto3" json:"num_of_validators,omitempty"`
	GenesisModifications []*GenesisKV           `protobuf:"bytes,4,rep,name=genesis_modifications,json=genesisModifications,proto3" json:"genesis_modifications,omitempty"`
	Image                string                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	mi := &file_server_proto_ironbird_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{2}
}

func (x *ChainConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChainConfig) GetNumOfNodes() uint64 {
	if x != nil {
		return x.NumOfNodes
	}
	return 0
}

func (x *ChainConfig) GetNumOfValidators() uint64 {
	if x != nil {
		return x.NumOfValidators
	}
	return 0
}

func (x *ChainConfig) GetGenesisModifications() []*GenesisKV {
	if x != nil {
		return x.GenesisModifications
	}
	return nil
}

func (x *ChainConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type NodeAddress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grpc          string                 `protobuf:"bytes,1,opt,name=grpc,proto3" json:"grpc,omitempty"`
	Rpc           string                 `protobuf:"bytes,2,opt,name=rpc,proto3" json:"rpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeAddress) Reset() {
	*x = NodeAddress{}
	mi := &file_server_proto_ironbird_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAddress) ProtoMessage() {}

func (x *NodeAddress) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAddress.ProtoReflect.Descriptor instead.
func (*NodeAddress) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{3}
}

func (x *NodeAddress) GetGrpc() string {
	if x != nil {
		return x.Grpc
	}
	return ""
}

func (x *NodeAddress) GetRpc() string {
	if x != nil {
		return x.Rpc
	}
	return ""
}

type LoadTestMsg struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Weight          float32                `protobuf:"fixed32,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Type            string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	NumMsgs         int32                  `protobuf:"varint,3,opt,name=num_msgs,json=numMsgs,proto3" json:"num_msgs,omitempty"`
	ContainedType   string                 `protobuf:"bytes,4,opt,name=contained_type,json=containedType,proto3" json:"contained_type,omitempty"`
	NumOfRecipients int32                  `protobuf:"varint,5,opt,name=num_of_recipients,json=numOfRecipients,proto3" json:"num_of_recipients,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LoadTestMsg) Reset() {
	*x = LoadTestMsg{}
	mi := &file_server_proto_ironbird_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadTestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTestMsg) ProtoMessage() {}

func (x *LoadTestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTestMsg.ProtoReflect.Descriptor instead.
func (*LoadTestMsg) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{4}
}

func (x *LoadTestMsg) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *LoadTestMsg) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LoadTestMsg) GetNumMsgs() int32 {
	if x != nil {
		return x.NumMsgs
	}
	return 0
}

func (x *LoadTestMsg) GetContainedType() string {
	if x != nil {
		return x.ContainedType
	}
	return ""
}

func (x *LoadTestMsg) GetNumOfRecipients() int32 {
	if x != nil {
		return x.NumOfRecipients
	}
	return 0
}

type LoadTestSpec struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Evm            bool                   `protobuf:"varint,3,opt,name=evm,proto3" json:"evm,omitempty"`
	ChainId        string                 `protobuf:"bytes,4,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	NumOfTxs       int32                  `protobuf:"varint,5,opt,name=num_of_txs,json=numOfTxs,proto3" json:"num_of_txs,omitempty"`
	NumOfBlocks    int32                  `protobuf:"varint,6,opt,name=num_of_blocks,json=numOfBlocks,proto3" json:"num_of_blocks,omitempty"`
	NodesAddresses []*NodeAddress         `protobuf:"bytes,7,rep,name=nodes_addresses,json=nodesAddresses,proto3" json:"nodes_addresses,omitempty"`
	Mnemonics      []string               `protobuf:"bytes,8,rep,name=mnemonics,proto3" json:"mnemonics,omitempty"`
	GasDenom       string                 `protobuf:"bytes,9,opt,name=gas_denom,json=gasDenom,proto3" json:"gas_denom,omitempty"`
	Bech32Prefix   string                 `protobuf:"bytes,10,opt,name=bech32_prefix,json=bech32Prefix,proto3" json:"bech32_prefix,omitempty"`
	Msgs           []*LoadTestMsg         `protobuf:"bytes,11,rep,name=msgs,proto3" json:"msgs,omitempty"`
	UnorderedTxs   bool                   `protobuf:"varint,12,opt,name=unordered_txs,json=unorderedTxs,proto3" json:"unordered_txs,omitempty"`
	TxTimeout      int64                  `protobuf:"varint,13,opt,name=tx_timeout,json=txTimeout,proto3" json:"tx_timeout,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LoadTestSpec) Reset() {
	*x = LoadTestSpec{}
	mi := &file_server_proto_ironbird_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadTestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTestSpec) ProtoMessage() {}

func (x *LoadTestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTestSpec.ProtoReflect.Descriptor instead.
func (*LoadTestSpec) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{5}
}

func (x *LoadTestSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoadTestSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LoadTestSpec) GetEvm() bool {
	if x != nil {
		return x.Evm
	}
	return false
}

func (x *LoadTestSpec) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *LoadTestSpec) GetNumOfTxs() int32 {
	if x != nil {
		return x.NumOfTxs
	}
	return 0
}

func (x *LoadTestSpec) GetNumOfBlocks() int32 {
	if x != nil {
		return x.NumOfBlocks
	}
	return 0
}

func (x *LoadTestSpec) GetNodesAddresses() []*NodeAddress {
	if x != nil {
		return x.NodesAddresses
	}
	return nil
}

func (x *LoadTestSpec) GetMnemonics() []string {
	if x != nil {
		return x.Mnemonics
	}
	return nil
}

func (x *LoadTestSpec) GetGasDenom() string {
	if x != nil {
		return x.GasDenom
	}
	return ""
}

func (x *LoadTestSpec) GetBech32Prefix() string {
	if x != nil {
		return x.Bech32Prefix
	}
	return ""
}

func (x *LoadTestSpec) GetMsgs() []*LoadTestMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *LoadTestSpec) GetUnorderedTxs() bool {
	if x != nil {
		return x.UnorderedTxs
	}
	return false
}

func (x *LoadTestSpec) GetTxTimeout() int64 {
	if x != nil {
		return x.TxTimeout
	}
	return 0
}

type GetWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{6}
}

func (x *GetWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type ListWorkflowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{7}
}

func (x *ListWorkflowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CancelWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelWorkflowRequest) Reset() {
	*x = CancelWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWorkflowRequest) ProtoMessage() {}

func (x *CancelWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CancelWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{8}
}

func (x *CancelWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type SignalWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	SignalName    string                 `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalWorkflowRequest) Reset() {
	*x = SignalWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalWorkflowRequest) ProtoMessage() {}

func (x *SignalWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalWorkflowRequest.ProtoReflect.Descriptor instead.
func (*SignalWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{9}
}

func (x *SignalWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SignalWorkflowRequest) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

type RunLoadTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	LoadTestSpec  *LoadTestSpec          `protobuf:"bytes,2,opt,name=load_test_spec,json=loadTestSpec,proto3" json:"load_test_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunLoadTestRequest) Reset() {
	*x = RunLoadTestRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunLoadTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLoadTestRequest) ProtoMessage() {}

func (x *RunLoadTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLoadTestRequest.ProtoReflect.Descriptor instead.
func (*RunLoadTestRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{10}
}

func (x *RunLoadTestRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *RunLoadTestRequest) GetLoadTestSpec() *LoadTestSpec {
	if x != nil {
		return x.LoadTestSpec
	}
	return nil
}

type WorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowResponse) Reset() {
	*x = WorkflowResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResponse) ProtoMessage() {}

func (x *WorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResponse.ProtoReflect.Descriptor instead.
func (*WorkflowResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{11}
}

func (x *WorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Rpc           string                 `protobuf:"bytes,3,opt,name=rpc,proto3" json:"rpc,omitempty"`
	Lcd           string                 `protobuf:"bytes,4,opt,name=lcd,proto3" json:"lcd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_server_proto_ironbird_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{12}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Node) GetRpc() string {
	if x != nil {
		return x.Rpc
	}
	return ""
}

func (x *Node) GetLcd() string {
	if x != nil {
		return x.Lcd
	}
	return ""
}

type Workflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Nodes         []*Node                `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Validators    []*Node                `protobuf:"bytes,4,rep,name=validators,proto3" json:"validators,omitempty"`
	LoadBalancers []*Node                `protobuf:"bytes,5,rep,name=load_balancers,json=loadBalancers,proto3" json:"load_balancers,omitempty"`
	Monitoring    map[string]string      `protobuf:"bytes,6,rep,name=monitoring,proto3" json:"monitoring,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Config        *CreateWorkflowRequest `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	LoadTestSpec  *LoadTestSpec          `protobuf:"bytes,17,opt,name=load_test_spec,json=loadTestSpec,proto3" json:"load_test_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_server_proto_ironbird_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{13}
}

func (x *Workflow) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Workflow) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Workflow) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Workflow) GetValidators() []*Node {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *Workflow) GetLoadBalancers() []*Node {
	if x != nil {
		return x.LoadBalancers
	}
	return nil
}

func (x *Workflow) GetMonitoring() map[string]string {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *Workflow) GetConfig() *CreateWorkflowRequest {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Workflow) GetLoadTestSpec() *LoadTestSpec {
	if x != nil {
		return x.LoadTestSpec
	}
	return nil
}

type WorkflowSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Repo          string                 `protobuf:"bytes,4,opt,name=repo,proto3" json:"repo,omitempty"`
	Sha           string                 `protobuf:"bytes,5,opt,name=sha,proto3" json:"sha,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowSummary) Reset() {
	*x = WorkflowSummary{}
	mi := &file_server_proto_ironbird_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowSummary) ProtoMessage() {}

func (x *WorkflowSummary) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowSummary.ProtoReflect.Descriptor instead.
func (*WorkflowSummary) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{14}
}

func (x *WorkflowSummary) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowSummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkflowSummary) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WorkflowSummary) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *WorkflowSummary) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

type UpdateWorkflowDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	LoadBalancers []*Node                `protobuf:"bytes,2,rep,name=load_balancers,json=loadBalancers,proto3" json:"load_balancers,omitempty"`
	Monitoring    map[string]string      `protobuf:"bytes,3,rep,name=monitoring,proto3" json:"monitoring,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Nodes         []*Node                `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Validators    []*Node                `protobuf:"bytes,5,rep,name=validators,proto3" json:"validators,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowDataRequest) Reset() {
	*x = UpdateWorkflowDataRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowDataRequest) ProtoMessage() {}

func (x *UpdateWorkflowDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowDataRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateWorkflowDataRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *UpdateWorkflowDataRequest) GetLoadBalancers() []*Node {
	if x != nil {
		return x.LoadBalancers
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetMonitoring() map[string]string {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetValidators() []*Node {
	if x != nil {
		return x.Validators
	}
	return nil
}

type WorkflowListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflows     []*WorkflowSummary     `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowListResponse) Reset() {
	*x = WorkflowListResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowListResponse) ProtoMessage() {}

func (x *WorkflowListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowListResponse.ProtoReflect.Descriptor instead.
func (*WorkflowListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{16}
}

func (x *WorkflowListResponse) GetWorkflows() []*WorkflowSummary {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *WorkflowListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_server_proto_ironbird_proto protoreflect.FileDescriptor

const file_server_proto_ironbird_proto_rawDesc = "" +
	"\n" +
	"\x1bserver/proto/ironbird.proto\x12\rskip.ironbird\"\xf0\x02\n" +
	"\x15CreateWorkflowRequest\x12\x12\n" +
	"\x04repo\x18\x01 \x01(\tR\x04repo\x12\x10\n" +
	"\x03sha\x18\x02 \x01(\tR\x03sha\x12\x10\n" +
	"\x03evm\x18\x03 \x01(\bR\x03evm\x12=\n" +
	"\fchain_config\x18\x04 \x01(\v2\x1a.skip.ironbird.ChainConfigR\vchainConfig\x12\x1f\n" +
	"\vrunner_type\x18\x05 \x01(\tR\n" +
	"runnerType\x12A\n" +
	"\x0eload_test_spec\x18\x06 \x01(\v2\x1b.skip.ironbird.LoadTestSpecR\floadTestSpec\x120\n" +
	"\x14long_running_testnet\x18\a \x01(\bR\x12longRunningTestnet\x12)\n" +
	"\x10testnet_duration\x18\b \x01(\x03R\x0ftestnetDuration\x12\x1f\n" +
	"\vnum_wallets\x18\t \x01(\x05R\n" +
	"numWallets\"3\n" +
	"\tGenesisKV\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xd4\x01\n" +
	"\vChainConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\fnum_of_nodes\x18\x02 \x01(\x04R\n" +
	"numOfNodes\x12*\n" +
	"\x11num_of_validators\x18\x03 \x01(\x04R\x0fnumOfValidators\x12M\n" +
	"\x15genesis_modifications\x18\x04 \x03(\v2\x18.skip.ironbird.GenesisKVR\x14genesisModifications\x12\x14\n" +
	"\x05image\x18\x05 \x01(\tR\x05image\"3\n" +
	"\vNodeAddress\x12\x12\n" +
	"\x04grpc\x18\x01 \x01(\tR\x04grpc\x12\x10\n" +
	"\x03rpc\x18\x02 \x01(\tR\x03rpc\"\xa7\x01\n" +
	"\vLoadTestMsg\x12\x16\n" +
	"\x06weight\x18\x01 \x01(\x02R\x06weight\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x19\n" +
	"\bnum_msgs\x18\x03 \x01(\x05R\anumMsgs\x12%\n" +
	"\x0econtained_type\x18\x04 \x01(\tR\rcontainedType\x12*\n" +
	"\x11num_of_recipients\x18\x05 \x01(\x05R\x0fnumOfRecipients\"\xcc\x03\n" +
	"\fLoadTestSpec\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x10\n" +
	"\x03evm\x18\x03 \x01(\bR\x03evm\x12\x19\n" +
	"\bchain_id\x18\x04 \x01(\tR\achainId\x12\x1c\n" +
	"\n" +
	"num_of_txs\x18\x05 \x01(\x05R\bnumOfTxs\x12\"\n" +
	"\rnum_of_blocks\x18\x06 \x01(\x05R\vnumOfBlocks\x12C\n" +
	"\x0fnodes_addresses\x18\a \x03(\v2\x1a.skip.ironbird.NodeAddressR\x0enodesAddresses\x12\x1c\n" +
	"\tmnemonics\x18\b \x03(\tR\tmnemonics\x12\x1b\n" +
	"\tgas_denom\x18\t \x01(\tR\bgasDenom\x12#\n" +
	"\rbech32_prefix\x18\n" +
	" \x01(\tR\fbech32Prefix\x12.\n" +
	"\x04msgs\x18\v \x03(\v2\x1a.skip.ironbird.LoadTestMsgR\x04msgs\x12#\n" +
	"\runordered_txs\x18\f \x01(\bR\funorderedTxs\x12\x1d\n" +
	"\n" +
	"tx_timeout\x18\r \x01(\x03R\ttxTimeout\"5\n" +
	"\x12GetWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"D\n" +
	"\x14ListWorkflowsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"8\n" +
	"\x15CancelWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"Y\n" +
	"\x15SignalWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x1f\n" +
	"\vsignal_name\x18\x02 \x01(\tR\n" +
	"signalName\"x\n" +
	"\x12RunLoadTestRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12A\n" +
	"\x0eload_test_spec\x18\x02 \x01(\v2\x1b.skip.ironbird.LoadTestSpecR\floadTestSpec\"3\n" +
	"\x10WorkflowResponse\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"X\n" +
	"\x04Node\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x10\n" +
	"\x03rpc\x18\x03 \x01(\tR\x03rpc\x12\x10\n" +
	"\x03lcd\x18\x04 \x01(\tR\x03lcd\"\xe8\x03\n" +
	"\bWorkflow\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12)\n" +
	"\x05nodes\x18\x03 \x03(\v2\x13.skip.ironbird.NodeR\x05nodes\x123\n" +
	"\n" +
	"validators\x18\x04 \x03(\v2\x13.skip.ironbird.NodeR\n" +
	"validators\x12:\n" +
	"\x0eload_balancers\x18\x05 \x03(\v2\x13.skip.ironbird.NodeR\rloadBalancers\x12G\n" +
	"\n" +
	"monitoring\x18\x06 \x03(\v2'.skip.ironbird.Workflow.MonitoringEntryR\n" +
	"monitoring\x12<\n" +
	"\x06config\x18\a \x01(\v2$.skip.ironbird.CreateWorkflowRequestR\x06config\x12A\n" +
	"\x0eload_test_spec\x18\x11 \x01(\v2\x1b.skip.ironbird.LoadTestSpecR\floadTestSpec\x1a=\n" +
	"\x0fMonitoringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x01\n" +
	"\x0fWorkflowSummary\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12\x12\n" +
	"\x04repo\x18\x04 \x01(\tR\x04repo\x12\x10\n" +
	"\x03sha\x18\x05 \x01(\tR\x03sha\"\xf1\x02\n" +
	"\x19UpdateWorkflowDataRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12:\n" +
	"\x0eload_balancers\x18\x02 \x03(\v2\x13.skip.ironbird.NodeR\rloadBalancers\x12X\n" +
	"\n" +
	"monitoring\x18\x03 \x03(\v28.skip.ironbird.UpdateWorkflowDataRequest.MonitoringEntryR\n" +
	"monitoring\x12)\n" +
	"\x05nodes\x18\x04 \x03(\v2\x13.skip.ironbird.NodeR\x05nodes\x123\n" +
	"\n" +
	"validators\x18\x05 \x03(\v2\x13.skip.ironbird.NodeR\n" +
	"validators\x1a=\n" +
	"\x0fMonitoringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\x14WorkflowListResponse\x12<\n" +
	"\tworkflows\x18\x01 \x03(\v2\x1e.skip.ironbird.WorkflowSummaryR\tworkflows\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count2\x84\x05\n" +
	"\x0fIronbirdService\x12Y\n" +
	"\x0eCreateWorkflow\x12$.skip.ironbird.CreateWorkflowRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12K\n" +
	"\vGetWorkflow\x12!.skip.ironbird.GetWorkflowRequest\x1a\x17.skip.ironbird.Workflow\"\x00\x12[\n" +
	"\rListWorkflows\x12#.skip.ironbird.ListWorkflowsRequest\x1a#.skip.ironbird.WorkflowListResponse\"\x00\x12Y\n" +
	"\x0eCancelWorkflow\x12$.skip.ironbird.CancelWorkflowRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12Y\n" +
	"\x0eSignalWorkflow\x12$.skip.ironbird.SignalWorkflowRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12S\n" +
	"\vRunLoadTest\x12!.skip.ironbird.RunLoadTestRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12a\n" +
	"\x12UpdateWorkflowData\x12(.skip.ironbird.UpdateWorkflowDataRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00B2Z0github.com/skip-mev/ironbird/server/gen/ironbirdb\x06proto3"

var (
	file_server_proto_ironbird_proto_rawDescOnce sync.Once
	file_server_proto_ironbird_proto_rawDescData []byte
)

func file_server_proto_ironbird_proto_rawDescGZIP() []byte {
	file_server_proto_ironbird_proto_rawDescOnce.Do(func() {
		file_server_proto_ironbird_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_proto_ironbird_proto_rawDesc), len(file_server_proto_ironbird_proto_rawDesc)))
	})
	return file_server_proto_ironbird_proto_rawDescData
}

var file_server_proto_ironbird_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_server_proto_ironbird_proto_goTypes = []any{
	(*CreateWorkflowRequest)(nil),     // 0: skip.ironbird.CreateWorkflowRequest
	(*GenesisKV)(nil),                 // 1: skip.ironbird.GenesisKV
	(*ChainConfig)(nil),               // 2: skip.ironbird.ChainConfig
	(*NodeAddress)(nil),               // 3: skip.ironbird.NodeAddress
	(*LoadTestMsg)(nil),               // 4: skip.ironbird.LoadTestMsg
	(*LoadTestSpec)(nil),              // 5: skip.ironbird.LoadTestSpec
	(*GetWorkflowRequest)(nil),        // 6: skip.ironbird.GetWorkflowRequest
	(*ListWorkflowsRequest)(nil),      // 7: skip.ironbird.ListWorkflowsRequest
	(*CancelWorkflowRequest)(nil),     // 8: skip.ironbird.CancelWorkflowRequest
	(*SignalWorkflowRequest)(nil),     // 9: skip.ironbird.SignalWorkflowRequest
	(*RunLoadTestRequest)(nil),        // 10: skip.ironbird.RunLoadTestRequest
	(*WorkflowResponse)(nil),          // 11: skip.ironbird.WorkflowResponse
	(*Node)(nil),                      // 12: skip.ironbird.Node
	(*Workflow)(nil),                  // 13: skip.ironbird.Workflow
	(*WorkflowSummary)(nil),           // 14: skip.ironbird.WorkflowSummary
	(*UpdateWorkflowDataRequest)(nil), // 15: skip.ironbird.UpdateWorkflowDataRequest
	(*WorkflowListResponse)(nil),      // 16: skip.ironbird.WorkflowListResponse
	nil,                               // 17: skip.ironbird.Workflow.MonitoringEntry
	nil,                               // 18: skip.ironbird.UpdateWorkflowDataRequest.MonitoringEntry
}
var file_server_proto_ironbird_proto_depIdxs = []int32{
	2,  // 0: skip.ironbird.CreateWorkflowRequest.chain_config:type_name -> skip.ironbird.ChainConfig
	5,  // 1: skip.ironbird.CreateWorkflowRequest.load_test_spec:type_name -> skip.ironbird.LoadTestSpec
	1,  // 2: skip.ironbird.ChainConfig.genesis_modifications:type_name -> skip.ironbird.GenesisKV
	3,  // 3: skip.ironbird.LoadTestSpec.nodes_addresses:type_name -> skip.ironbird.NodeAddress
	4,  // 4: skip.ironbird.LoadTestSpec.msgs:type_name -> skip.ironbird.LoadTestMsg
	5,  // 5: skip.ironbird.RunLoadTestRequest.load_test_spec:type_name -> skip.ironbird.LoadTestSpec
	12, // 6: skip.ironbird.Workflow.nodes:type_name -> skip.ironbird.Node
	12, // 7: skip.ironbird.Workflow.validators:type_name -> skip.ironbird.Node
	12, // 8: skip.ironbird.Workflow.load_balancers:type_name -> skip.ironbird.Node
	17, // 9: skip.ironbird.Workflow.monitoring:type_name -> skip.ironbird.Workflow.MonitoringEntry
	0,  // 10: skip.ironbird.Workflow.config:type_name -> skip.ironbird.CreateWorkflowRequest
	5,  // 11: skip.ironbird.Workflow.load_test_spec:type_name -> skip.ironbird.LoadTestSpec
	12, // 12: skip.ironbird.UpdateWorkflowDataRequest.load_balancers:type_name -> skip.ironbird.Node
	18, // 13: skip.ironbird.UpdateWorkflowDataRequest.monitoring:type_name -> skip.ironbird.UpdateWorkflowDataRequest.MonitoringEntry
	12, // 14: skip.ironbird.UpdateWorkflowDataRequest.nodes:type_name -> skip.ironbird.Node
	12, // 15: skip.ironbird.UpdateWorkflowDataRequest.validators:type_name -> skip.ironbird.Node
	14, // 16: skip.ironbird.WorkflowListResponse.workflows:type_name -> skip.ironbird.WorkflowSummary
	0,  // 17: skip.ironbird.IronbirdService.CreateWorkflow:input_type -> skip.ironbird.CreateWorkflowRequest
	6,  // 18: skip.ironbird.IronbirdService.GetWorkflow:input_type -> skip.ironbird.GetWorkflowRequest
	7,  // 19: skip.ironbird.IronbirdService.ListWorkflows:input_type -> skip.ironbird.ListWorkflowsRequest
	8,  // 20: skip.ironbird.IronbirdService.CancelWorkflow:input_type -> skip.ironbird.CancelWorkflowRequest
	9,  // 21: skip.ironbird.IronbirdService.SignalWorkflow:input_type -> skip.ironbird.SignalWorkflowRequest
	10, // 22: skip.ironbird.IronbirdService.RunLoadTest:input_type -> skip.ironbird.RunLoadTestRequest
	15, // 23: skip.ironbird.IronbirdService.UpdateWorkflowData:input_type -> skip.ironbird.UpdateWorkflowDataRequest
	11, // 24: skip.ironbird.IronbirdService.CreateWorkflow:output_type -> skip.ironbird.WorkflowResponse
	13, // 25: skip.ironbird.IronbirdService.GetWorkflow:output_type -> skip.ironbird.Workflow
	16, // 26: skip.ironbird.IronbirdService.ListWorkflows:output_type -> skip.ironbird.WorkflowListResponse
	11, // 27: skip.ironbird.IronbirdService.CancelWorkflow:output_type -> skip.ironbird.WorkflowResponse
	11, // 28: skip.ironbird.IronbirdService.SignalWorkflow:output_type -> skip.ironbird.WorkflowResponse
	11, // 29: skip.ironbird.IronbirdService.RunLoadTest:output_type -> skip.ironbird.WorkflowResponse
	11, // 30: skip.ironbird.IronbirdService.UpdateWorkflowData:output_type -> skip.ironbird.WorkflowResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_server_proto_ironbird_proto_init() }
func file_server_proto_ironbird_proto_init() {
	if File_server_proto_ironbird_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_proto_ironbird_proto_rawDesc), len(file_server_proto_ironbird_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_ironbird_proto_goTypes,
		DependencyIndexes: file_server_proto_ironbird_proto_depIdxs,
		MessageInfos:      file_server_proto_ironbird_proto_msgTypes,
	}.Build()
	File_server_proto_ironbird_proto = out.File
	file_server_proto_ironbird_proto_goTypes = nil
	file_server_proto_ironbird_proto_depIdxs = nil
}
