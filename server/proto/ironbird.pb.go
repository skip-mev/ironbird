// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.0
// source: server/proto/ironbird.proto

package ironbird

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWorkflowRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Repo        string                 `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Sha         string                 `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	IsEvmChain  bool                   `protobuf:"varint,3,opt,name=isEvmChain,proto3" json:"isEvmChain,omitempty"`
	ChainConfig *ChainConfig           `protobuf:"bytes,4,opt,name=chain_config,json=chainConfig,proto3" json:"chain_config,omitempty"`
	RunnerType  string                 `protobuf:"bytes,5,opt,name=runner_type,json=runnerType,proto3" json:"runner_type,omitempty"`
	// json encoded loadtest spec.
	EncodedLoadTestSpec string `protobuf:"bytes,6,opt,name=encoded_load_test_spec,json=encodedLoadTestSpec,proto3" json:"encoded_load_test_spec,omitempty"`
	LongRunningTestnet  bool   `protobuf:"varint,8,opt,name=long_running_testnet,json=longRunningTestnet,proto3" json:"long_running_testnet,omitempty"`
	TestnetDuration     string `protobuf:"bytes,9,opt,name=testnet_duration,json=testnetDuration,proto3" json:"testnet_duration,omitempty"`
	NumWallets          int32  `protobuf:"varint,10,opt,name=num_wallets,json=numWallets,proto3" json:"num_wallets,omitempty"`
	LaunchLoadBalancer  bool   `protobuf:"varint,11,opt,name=launch_load_balancer,json=launchLoadBalancer,proto3" json:"launch_load_balancer,omitempty"`
	CatalystVersion     string `protobuf:"bytes,12,opt,name=catalyst_version,json=catalystVersion,proto3" json:"catalyst_version,omitempty"`
	BaseMnemonic        string `protobuf:"bytes,13,opt,name=base_mnemonic,json=baseMnemonic,proto3" json:"base_mnemonic,omitempty"`
	// Optional: cosmos-sdk version/SHA for EVM builds with replacements
	CosmosSdkSha string `protobuf:"bytes,14,opt,name=cosmos_sdk_sha,json=cosmosSdkSha,proto3" json:"cosmos_sdk_sha,omitempty"`
	// Optional: cometbft version/SHA for EVM builds with replacements
	CometbftSha string `protobuf:"bytes,15,opt,name=cometbft_sha,json=cometbftSha,proto3" json:"cometbft_sha,omitempty"`
	// Optional: provider specific configuration.
	// Each key overrides the default value for the provider.
	ProviderConfig map[string]string `protobuf:"bytes,16,rep,name=provider_config,json=providerConfig,proto3" json:"provider_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkflowRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *CreateWorkflowRequest) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *CreateWorkflowRequest) GetIsEvmChain() bool {
	if x != nil {
		return x.IsEvmChain
	}
	return false
}

func (x *CreateWorkflowRequest) GetChainConfig() *ChainConfig {
	if x != nil {
		return x.ChainConfig
	}
	return nil
}

func (x *CreateWorkflowRequest) GetRunnerType() string {
	if x != nil {
		return x.RunnerType
	}
	return ""
}

func (x *CreateWorkflowRequest) GetEncodedLoadTestSpec() string {
	if x != nil {
		return x.EncodedLoadTestSpec
	}
	return ""
}

func (x *CreateWorkflowRequest) GetLongRunningTestnet() bool {
	if x != nil {
		return x.LongRunningTestnet
	}
	return false
}

func (x *CreateWorkflowRequest) GetTestnetDuration() string {
	if x != nil {
		return x.TestnetDuration
	}
	return ""
}

func (x *CreateWorkflowRequest) GetNumWallets() int32 {
	if x != nil {
		return x.NumWallets
	}
	return 0
}

func (x *CreateWorkflowRequest) GetLaunchLoadBalancer() bool {
	if x != nil {
		return x.LaunchLoadBalancer
	}
	return false
}

func (x *CreateWorkflowRequest) GetCatalystVersion() string {
	if x != nil {
		return x.CatalystVersion
	}
	return ""
}

func (x *CreateWorkflowRequest) GetBaseMnemonic() string {
	if x != nil {
		return x.BaseMnemonic
	}
	return ""
}

func (x *CreateWorkflowRequest) GetCosmosSdkSha() string {
	if x != nil {
		return x.CosmosSdkSha
	}
	return ""
}

func (x *CreateWorkflowRequest) GetCometbftSha() string {
	if x != nil {
		return x.CometbftSha
	}
	return ""
}

func (x *CreateWorkflowRequest) GetProviderConfig() map[string]string {
	if x != nil {
		return x.ProviderConfig
	}
	return nil
}

type GenesisKV struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenesisKV) Reset() {
	*x = GenesisKV{}
	mi := &file_server_proto_ironbird_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisKV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisKV) ProtoMessage() {}

func (x *GenesisKV) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisKV.ProtoReflect.Descriptor instead.
func (*GenesisKV) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{1}
}

func (x *GenesisKV) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GenesisKV) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RegionConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumOfNodes      uint64                 `protobuf:"varint,2,opt,name=num_of_nodes,json=numOfNodes,proto3" json:"num_of_nodes,omitempty"`
	NumOfValidators uint64                 `protobuf:"varint,3,opt,name=num_of_validators,json=numOfValidators,proto3" json:"num_of_validators,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegionConfig) Reset() {
	*x = RegionConfig{}
	mi := &file_server_proto_ironbird_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionConfig) ProtoMessage() {}

func (x *RegionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionConfig.ProtoReflect.Descriptor instead.
func (*RegionConfig) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{2}
}

func (x *RegionConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionConfig) GetNumOfNodes() uint64 {
	if x != nil {
		return x.NumOfNodes
	}
	return 0
}

func (x *RegionConfig) GetNumOfValidators() uint64 {
	if x != nil {
		return x.NumOfValidators
	}
	return 0
}

type ChainConfig struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumOfNodes            uint64                 `protobuf:"varint,2,opt,name=num_of_nodes,json=numOfNodes,proto3" json:"num_of_nodes,omitempty"`
	NumOfValidators       uint64                 `protobuf:"varint,3,opt,name=num_of_validators,json=numOfValidators,proto3" json:"num_of_validators,omitempty"`
	GenesisModifications  []*GenesisKV           `protobuf:"bytes,4,rep,name=genesis_modifications,json=genesisModifications,proto3" json:"genesis_modifications,omitempty"`
	Image                 string                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	CustomAppConfig       string                 `protobuf:"bytes,6,opt,name=custom_app_config,json=customAppConfig,proto3" json:"custom_app_config,omitempty"`
	CustomConsensusConfig string                 `protobuf:"bytes,7,opt,name=custom_consensus_config,json=customConsensusConfig,proto3" json:"custom_consensus_config,omitempty"`
	CustomClientConfig    string                 `protobuf:"bytes,8,opt,name=custom_client_config,json=customClientConfig,proto3" json:"custom_client_config,omitempty"`
	SetSeedNode           bool                   `protobuf:"varint,9,opt,name=set_seed_node,json=setSeedNode,proto3" json:"set_seed_node,omitempty"`
	SetPersistentPeers    bool                   `protobuf:"varint,10,opt,name=set_persistent_peers,json=setPersistentPeers,proto3" json:"set_persistent_peers,omitempty"`
	RegionConfigs         []*RegionConfig        `protobuf:"bytes,11,rep,name=region_configs,json=regionConfigs,proto3" json:"region_configs,omitempty"`
	Version               string                 `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	mi := &file_server_proto_ironbird_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{3}
}

func (x *ChainConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChainConfig) GetNumOfNodes() uint64 {
	if x != nil {
		return x.NumOfNodes
	}
	return 0
}

func (x *ChainConfig) GetNumOfValidators() uint64 {
	if x != nil {
		return x.NumOfValidators
	}
	return 0
}

func (x *ChainConfig) GetGenesisModifications() []*GenesisKV {
	if x != nil {
		return x.GenesisModifications
	}
	return nil
}

func (x *ChainConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ChainConfig) GetCustomAppConfig() string {
	if x != nil {
		return x.CustomAppConfig
	}
	return ""
}

func (x *ChainConfig) GetCustomConsensusConfig() string {
	if x != nil {
		return x.CustomConsensusConfig
	}
	return ""
}

func (x *ChainConfig) GetCustomClientConfig() string {
	if x != nil {
		return x.CustomClientConfig
	}
	return ""
}

func (x *ChainConfig) GetSetSeedNode() bool {
	if x != nil {
		return x.SetSeedNode
	}
	return false
}

func (x *ChainConfig) GetSetPersistentPeers() bool {
	if x != nil {
		return x.SetPersistentPeers
	}
	return false
}

func (x *ChainConfig) GetRegionConfigs() []*RegionConfig {
	if x != nil {
		return x.RegionConfigs
	}
	return nil
}

func (x *ChainConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{4}
}

func (x *GetWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type ListWorkflowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{5}
}

func (x *ListWorkflowsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CancelWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelWorkflowRequest) Reset() {
	*x = CancelWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWorkflowRequest) ProtoMessage() {}

func (x *CancelWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CancelWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{6}
}

func (x *CancelWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type SignalWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	SignalName    string                 `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalWorkflowRequest) Reset() {
	*x = SignalWorkflowRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalWorkflowRequest) ProtoMessage() {}

func (x *SignalWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalWorkflowRequest.ProtoReflect.Descriptor instead.
func (*SignalWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{7}
}

func (x *SignalWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SignalWorkflowRequest) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

type RunLoadTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	LoadTestSpec  string                 `protobuf:"bytes,2,opt,name=load_test_spec,json=loadTestSpec,proto3" json:"load_test_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunLoadTestRequest) Reset() {
	*x = RunLoadTestRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunLoadTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunLoadTestRequest) ProtoMessage() {}

func (x *RunLoadTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunLoadTestRequest.ProtoReflect.Descriptor instead.
func (*RunLoadTestRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{8}
}

func (x *RunLoadTestRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *RunLoadTestRequest) GetLoadTestSpec() string {
	if x != nil {
		return x.LoadTestSpec
	}
	return ""
}

type WorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowResponse) Reset() {
	*x = WorkflowResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResponse) ProtoMessage() {}

func (x *WorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResponse.ProtoReflect.Descriptor instead.
func (*WorkflowResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{9}
}

func (x *WorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Rpc           string                 `protobuf:"bytes,3,opt,name=rpc,proto3" json:"rpc,omitempty"`
	Lcd           string                 `protobuf:"bytes,4,opt,name=lcd,proto3" json:"lcd,omitempty"`
	Grpc          string                 `protobuf:"bytes,5,opt,name=grpc,proto3" json:"grpc,omitempty"`
	Evmrpc        string                 `protobuf:"bytes,6,opt,name=evmrpc,proto3" json:"evmrpc,omitempty"`
	Evmws         string                 `protobuf:"bytes,7,opt,name=evmws,proto3" json:"evmws,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_server_proto_ironbird_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{10}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Node) GetRpc() string {
	if x != nil {
		return x.Rpc
	}
	return ""
}

func (x *Node) GetLcd() string {
	if x != nil {
		return x.Lcd
	}
	return ""
}

func (x *Node) GetGrpc() string {
	if x != nil {
		return x.Grpc
	}
	return ""
}

func (x *Node) GetEvmrpc() string {
	if x != nil {
		return x.Evmrpc
	}
	return ""
}

func (x *Node) GetEvmws() string {
	if x != nil {
		return x.Evmws
	}
	return ""
}

type WalletInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FaucetAddress  string                 `protobuf:"bytes,1,opt,name=faucet_address,json=faucetAddress,proto3" json:"faucet_address,omitempty"`
	FaucetMnemonic string                 `protobuf:"bytes,2,opt,name=faucet_mnemonic,json=faucetMnemonic,proto3" json:"faucet_mnemonic,omitempty"`
	UserAddresses  []string               `protobuf:"bytes,3,rep,name=user_addresses,json=userAddresses,proto3" json:"user_addresses,omitempty"`
	UserMnemonics  []string               `protobuf:"bytes,4,rep,name=user_mnemonics,json=userMnemonics,proto3" json:"user_mnemonics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WalletInfo) Reset() {
	*x = WalletInfo{}
	mi := &file_server_proto_ironbird_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletInfo) ProtoMessage() {}

func (x *WalletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletInfo.ProtoReflect.Descriptor instead.
func (*WalletInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{11}
}

func (x *WalletInfo) GetFaucetAddress() string {
	if x != nil {
		return x.FaucetAddress
	}
	return ""
}

func (x *WalletInfo) GetFaucetMnemonic() string {
	if x != nil {
		return x.FaucetMnemonic
	}
	return ""
}

func (x *WalletInfo) GetUserAddresses() []string {
	if x != nil {
		return x.UserAddresses
	}
	return nil
}

func (x *WalletInfo) GetUserMnemonics() []string {
	if x != nil {
		return x.UserMnemonics
	}
	return nil
}

type Workflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Nodes         []*Node                `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Validators    []*Node                `protobuf:"bytes,4,rep,name=validators,proto3" json:"validators,omitempty"`
	LoadBalancers []*Node                `protobuf:"bytes,5,rep,name=load_balancers,json=loadBalancers,proto3" json:"load_balancers,omitempty"`
	Monitoring    map[string]string      `protobuf:"bytes,6,rep,name=monitoring,proto3" json:"monitoring,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Config        *CreateWorkflowRequest `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	LoadTestSpec  string                 `protobuf:"bytes,17,opt,name=load_test_spec,json=loadTestSpec,proto3" json:"load_test_spec,omitempty"`
	Wallets       *WalletInfo            `protobuf:"bytes,18,opt,name=wallets,proto3" json:"wallets,omitempty"`
	Provider      string                 `protobuf:"bytes,19,opt,name=provider,proto3" json:"provider,omitempty"`
	StartTime     string                 `protobuf:"bytes,20,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,21,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_server_proto_ironbird_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{12}
}

func (x *Workflow) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Workflow) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Workflow) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Workflow) GetValidators() []*Node {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *Workflow) GetLoadBalancers() []*Node {
	if x != nil {
		return x.LoadBalancers
	}
	return nil
}

func (x *Workflow) GetMonitoring() map[string]string {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *Workflow) GetConfig() *CreateWorkflowRequest {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Workflow) GetLoadTestSpec() string {
	if x != nil {
		return x.LoadTestSpec
	}
	return ""
}

func (x *Workflow) GetWallets() *WalletInfo {
	if x != nil {
		return x.Wallets
	}
	return nil
}

func (x *Workflow) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Workflow) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Workflow) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type WorkflowSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Repo          string                 `protobuf:"bytes,4,opt,name=repo,proto3" json:"repo,omitempty"`
	Sha           string                 `protobuf:"bytes,5,opt,name=sha,proto3" json:"sha,omitempty"`
	Provider      string                 `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	TemplateId    string                 `protobuf:"bytes,7,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	RunName       string                 `protobuf:"bytes,8,opt,name=run_name,json=runName,proto3" json:"run_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowSummary) Reset() {
	*x = WorkflowSummary{}
	mi := &file_server_proto_ironbird_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowSummary) ProtoMessage() {}

func (x *WorkflowSummary) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowSummary.ProtoReflect.Descriptor instead.
func (*WorkflowSummary) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{13}
}

func (x *WorkflowSummary) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowSummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkflowSummary) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WorkflowSummary) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *WorkflowSummary) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *WorkflowSummary) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *WorkflowSummary) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *WorkflowSummary) GetRunName() string {
	if x != nil {
		return x.RunName
	}
	return ""
}

type UpdateWorkflowDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	LoadBalancers []*Node                `protobuf:"bytes,2,rep,name=load_balancers,json=loadBalancers,proto3" json:"load_balancers,omitempty"`
	Monitoring    map[string]string      `protobuf:"bytes,3,rep,name=monitoring,proto3" json:"monitoring,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Nodes         []*Node                `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Validators    []*Node                `protobuf:"bytes,5,rep,name=validators,proto3" json:"validators,omitempty"`
	Wallets       *WalletInfo            `protobuf:"bytes,6,opt,name=wallets,proto3" json:"wallets,omitempty"`
	Provider      string                 `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowDataRequest) Reset() {
	*x = UpdateWorkflowDataRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowDataRequest) ProtoMessage() {}

func (x *UpdateWorkflowDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowDataRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateWorkflowDataRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *UpdateWorkflowDataRequest) GetLoadBalancers() []*Node {
	if x != nil {
		return x.LoadBalancers
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetMonitoring() map[string]string {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetValidators() []*Node {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetWallets() *WalletInfo {
	if x != nil {
		return x.Wallets
	}
	return nil
}

func (x *UpdateWorkflowDataRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type WorkflowListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workflows     []*WorkflowSummary     `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowListResponse) Reset() {
	*x = WorkflowListResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowListResponse) ProtoMessage() {}

func (x *WorkflowListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowListResponse.ProtoReflect.Descriptor instead.
func (*WorkflowListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{15}
}

func (x *WorkflowListResponse) GetWorkflows() []*WorkflowSummary {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *WorkflowListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type WorkflowTemplate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TemplateConfig *CreateWorkflowRequest `protobuf:"bytes,3,opt,name=template_config,json=templateConfig,proto3" json:"template_config,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy      string                 `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkflowTemplate) Reset() {
	*x = WorkflowTemplate{}
	mi := &file_server_proto_ironbird_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTemplate) ProtoMessage() {}

func (x *WorkflowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTemplate.ProtoReflect.Descriptor instead.
func (*WorkflowTemplate) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{16}
}

func (x *WorkflowTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowTemplate) GetTemplateConfig() *CreateWorkflowRequest {
	if x != nil {
		return x.TemplateConfig
	}
	return nil
}

func (x *WorkflowTemplate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkflowTemplate) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CreateWorkflowTemplateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TemplateConfig *CreateWorkflowRequest `protobuf:"bytes,3,opt,name=template_config,json=templateConfig,proto3" json:"template_config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateWorkflowTemplateRequest) Reset() {
	*x = CreateWorkflowTemplateRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkflowTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowTemplateRequest) ProtoMessage() {}

func (x *CreateWorkflowTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{17}
}

func (x *CreateWorkflowTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateWorkflowTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWorkflowTemplateRequest) GetTemplateConfig() *CreateWorkflowRequest {
	if x != nil {
		return x.TemplateConfig
	}
	return nil
}

type GetWorkflowTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowTemplateRequest) Reset() {
	*x = GetWorkflowTemplateRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowTemplateRequest) ProtoMessage() {}

func (x *GetWorkflowTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{18}
}

func (x *GetWorkflowTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListWorkflowTemplatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkflowTemplatesRequest) Reset() {
	*x = ListWorkflowTemplatesRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkflowTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowTemplatesRequest) ProtoMessage() {}

func (x *ListWorkflowTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{19}
}

func (x *ListWorkflowTemplatesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowTemplatesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UpdateWorkflowTemplateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TemplateConfig *CreateWorkflowRequest `protobuf:"bytes,3,opt,name=template_config,json=templateConfig,proto3" json:"template_config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateWorkflowTemplateRequest) Reset() {
	*x = UpdateWorkflowTemplateRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowTemplateRequest) ProtoMessage() {}

func (x *UpdateWorkflowTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateWorkflowTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWorkflowTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateWorkflowTemplateRequest) GetTemplateConfig() *CreateWorkflowRequest {
	if x != nil {
		return x.TemplateConfig
	}
	return nil
}

type DeleteWorkflowTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowTemplateRequest) Reset() {
	*x = DeleteWorkflowTemplateRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowTemplateRequest) ProtoMessage() {}

func (x *DeleteWorkflowTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteWorkflowTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type WorkflowTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowTemplateResponse) Reset() {
	*x = WorkflowTemplateResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTemplateResponse) ProtoMessage() {}

func (x *WorkflowTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTemplateResponse.ProtoReflect.Descriptor instead.
func (*WorkflowTemplateResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{22}
}

func (x *WorkflowTemplateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type WorkflowTemplateSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RunCount      int32                  `protobuf:"varint,4,opt,name=run_count,json=runCount,proto3" json:"run_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowTemplateSummary) Reset() {
	*x = WorkflowTemplateSummary{}
	mi := &file_server_proto_ironbird_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowTemplateSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTemplateSummary) ProtoMessage() {}

func (x *WorkflowTemplateSummary) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTemplateSummary.ProtoReflect.Descriptor instead.
func (*WorkflowTemplateSummary) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{23}
}

func (x *WorkflowTemplateSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowTemplateSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowTemplateSummary) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkflowTemplateSummary) GetRunCount() int32 {
	if x != nil {
		return x.RunCount
	}
	return 0
}

type WorkflowTemplateListResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Templates     []*WorkflowTemplateSummary `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	Count         int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowTemplateListResponse) Reset() {
	*x = WorkflowTemplateListResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowTemplateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTemplateListResponse) ProtoMessage() {}

func (x *WorkflowTemplateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTemplateListResponse.ProtoReflect.Descriptor instead.
func (*WorkflowTemplateListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{24}
}

func (x *WorkflowTemplateListResponse) GetTemplates() []*WorkflowTemplateSummary {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *WorkflowTemplateListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ExecuteWorkflowTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sha           string                 `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	RunName       string                 `protobuf:"bytes,3,opt,name=run_name,json=runName,proto3" json:"run_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteWorkflowTemplateRequest) Reset() {
	*x = ExecuteWorkflowTemplateRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteWorkflowTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteWorkflowTemplateRequest) ProtoMessage() {}

func (x *ExecuteWorkflowTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteWorkflowTemplateRequest.ProtoReflect.Descriptor instead.
func (*ExecuteWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{25}
}

func (x *ExecuteWorkflowTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecuteWorkflowTemplateRequest) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *ExecuteWorkflowTemplateRequest) GetRunName() string {
	if x != nil {
		return x.RunName
	}
	return ""
}

type TemplateRun struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RunId           string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	WorkflowId      string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TemplateId      string                 `protobuf:"bytes,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Sha             string                 `protobuf:"bytes,4,opt,name=sha,proto3" json:"sha,omitempty"`
	RunName         string                 `protobuf:"bytes,5,opt,name=run_name,json=runName,proto3" json:"run_name,omitempty"`
	Status          string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	StartedAt       string                 `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt     string                 `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	MonitoringLinks map[string]string      `protobuf:"bytes,9,rep,name=monitoring_links,json=monitoringLinks,proto3" json:"monitoring_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Provider        string                 `protobuf:"bytes,10,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TemplateRun) Reset() {
	*x = TemplateRun{}
	mi := &file_server_proto_ironbird_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRun) ProtoMessage() {}

func (x *TemplateRun) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRun.ProtoReflect.Descriptor instead.
func (*TemplateRun) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{26}
}

func (x *TemplateRun) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *TemplateRun) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TemplateRun) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *TemplateRun) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *TemplateRun) GetRunName() string {
	if x != nil {
		return x.RunName
	}
	return ""
}

func (x *TemplateRun) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TemplateRun) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *TemplateRun) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *TemplateRun) GetMonitoringLinks() map[string]string {
	if x != nil {
		return x.MonitoringLinks
	}
	return nil
}

func (x *TemplateRun) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type GetTemplateRunHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateRunHistoryRequest) Reset() {
	*x = GetTemplateRunHistoryRequest{}
	mi := &file_server_proto_ironbird_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateRunHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRunHistoryRequest) ProtoMessage() {}

func (x *GetTemplateRunHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRunHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRunHistoryRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{27}
}

func (x *GetTemplateRunHistoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTemplateRunHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTemplateRunHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TemplateRunHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runs          []*TemplateRun         `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateRunHistoryResponse) Reset() {
	*x = TemplateRunHistoryResponse{}
	mi := &file_server_proto_ironbird_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateRunHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRunHistoryResponse) ProtoMessage() {}

func (x *TemplateRunHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_ironbird_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRunHistoryResponse.ProtoReflect.Descriptor instead.
func (*TemplateRunHistoryResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_ironbird_proto_rawDescGZIP(), []int{28}
}

func (x *TemplateRunHistoryResponse) GetRuns() []*TemplateRun {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *TemplateRunHistoryResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_server_proto_ironbird_proto protoreflect.FileDescriptor

const file_server_proto_ironbird_proto_rawDesc = "" +
	"\n" +
	"\x1bserver/proto/ironbird.proto\x12\rskip.ironbird\"\xe1\x05\n" +
	"\x15CreateWorkflowRequest\x12\x12\n" +
	"\x04repo\x18\x01 \x01(\tR\x04repo\x12\x10\n" +
	"\x03sha\x18\x02 \x01(\tR\x03sha\x12\x1e\n" +
	"\n" +
	"isEvmChain\x18\x03 \x01(\bR\n" +
	"isEvmChain\x12=\n" +
	"\fchain_config\x18\x04 \x01(\v2\x1a.skip.ironbird.ChainConfigR\vchainConfig\x12\x1f\n" +
	"\vrunner_type\x18\x05 \x01(\tR\n" +
	"runnerType\x123\n" +
	"\x16encoded_load_test_spec\x18\x06 \x01(\tR\x13encodedLoadTestSpec\x120\n" +
	"\x14long_running_testnet\x18\b \x01(\bR\x12longRunningTestnet\x12)\n" +
	"\x10testnet_duration\x18\t \x01(\tR\x0ftestnetDuration\x12\x1f\n" +
	"\vnum_wallets\x18\n" +
	" \x01(\x05R\n" +
	"numWallets\x120\n" +
	"\x14launch_load_balancer\x18\v \x01(\bR\x12launchLoadBalancer\x12)\n" +
	"\x10catalyst_version\x18\f \x01(\tR\x0fcatalystVersion\x12#\n" +
	"\rbase_mnemonic\x18\r \x01(\tR\fbaseMnemonic\x12$\n" +
	"\x0ecosmos_sdk_sha\x18\x0e \x01(\tR\fcosmosSdkSha\x12!\n" +
	"\fcometbft_sha\x18\x0f \x01(\tR\vcometbftSha\x12a\n" +
	"\x0fprovider_config\x18\x10 \x03(\v28.skip.ironbird.CreateWorkflowRequest.ProviderConfigEntryR\x0eproviderConfig\x1aA\n" +
	"\x13ProviderConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"3\n" +
	"\tGenesisKV\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"p\n" +
	"\fRegionConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\fnum_of_nodes\x18\x02 \x01(\x04R\n" +
	"numOfNodes\x12*\n" +
	"\x11num_of_validators\x18\x03 \x01(\x04R\x0fnumOfValidators\"\x9e\x04\n" +
	"\vChainConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\fnum_of_nodes\x18\x02 \x01(\x04R\n" +
	"numOfNodes\x12*\n" +
	"\x11num_of_validators\x18\x03 \x01(\x04R\x0fnumOfValidators\x12M\n" +
	"\x15genesis_modifications\x18\x04 \x03(\v2\x18.skip.ironbird.GenesisKVR\x14genesisModifications\x12\x14\n" +
	"\x05image\x18\x05 \x01(\tR\x05image\x12*\n" +
	"\x11custom_app_config\x18\x06 \x01(\tR\x0fcustomAppConfig\x126\n" +
	"\x17custom_consensus_config\x18\a \x01(\tR\x15customConsensusConfig\x120\n" +
	"\x14custom_client_config\x18\b \x01(\tR\x12customClientConfig\x12\"\n" +
	"\rset_seed_node\x18\t \x01(\bR\vsetSeedNode\x120\n" +
	"\x14set_persistent_peers\x18\n" +
	" \x01(\bR\x12setPersistentPeers\x12B\n" +
	"\x0eregion_configs\x18\v \x03(\v2\x1b.skip.ironbird.RegionConfigR\rregionConfigs\x12\x18\n" +
	"\aversion\x18\f \x01(\tR\aversion\"5\n" +
	"\x12GetWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"D\n" +
	"\x14ListWorkflowsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"8\n" +
	"\x15CancelWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"Y\n" +
	"\x15SignalWorkflowRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x1f\n" +
	"\vsignal_name\x18\x02 \x01(\tR\n" +
	"signalName\"[\n" +
	"\x12RunLoadTestRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12$\n" +
	"\x0eload_test_spec\x18\x02 \x01(\tR\floadTestSpec\"3\n" +
	"\x10WorkflowResponse\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\"\x9a\x01\n" +
	"\x04Node\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x10\n" +
	"\x03rpc\x18\x03 \x01(\tR\x03rpc\x12\x10\n" +
	"\x03lcd\x18\x04 \x01(\tR\x03lcd\x12\x12\n" +
	"\x04grpc\x18\x05 \x01(\tR\x04grpc\x12\x16\n" +
	"\x06evmrpc\x18\x06 \x01(\tR\x06evmrpc\x12\x14\n" +
	"\x05evmws\x18\a \x01(\tR\x05evmws\"\xaa\x01\n" +
	"\n" +
	"WalletInfo\x12%\n" +
	"\x0efaucet_address\x18\x01 \x01(\tR\rfaucetAddress\x12'\n" +
	"\x0ffaucet_mnemonic\x18\x02 \x01(\tR\x0efaucetMnemonic\x12%\n" +
	"\x0euser_addresses\x18\x03 \x03(\tR\ruserAddresses\x12%\n" +
	"\x0euser_mnemonics\x18\x04 \x03(\tR\ruserMnemonics\"\xd6\x04\n" +
	"\bWorkflow\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12)\n" +
	"\x05nodes\x18\x03 \x03(\v2\x13.skip.ironbird.NodeR\x05nodes\x123\n" +
	"\n" +
	"validators\x18\x04 \x03(\v2\x13.skip.ironbird.NodeR\n" +
	"validators\x12:\n" +
	"\x0eload_balancers\x18\x05 \x03(\v2\x13.skip.ironbird.NodeR\rloadBalancers\x12G\n" +
	"\n" +
	"monitoring\x18\x06 \x03(\v2'.skip.ironbird.Workflow.MonitoringEntryR\n" +
	"monitoring\x12<\n" +
	"\x06config\x18\a \x01(\v2$.skip.ironbird.CreateWorkflowRequestR\x06config\x12$\n" +
	"\x0eload_test_spec\x18\x11 \x01(\tR\floadTestSpec\x123\n" +
	"\awallets\x18\x12 \x01(\v2\x19.skip.ironbird.WalletInfoR\awallets\x12\x1a\n" +
	"\bprovider\x18\x13 \x01(\tR\bprovider\x12\x1d\n" +
	"\n" +
	"start_time\x18\x14 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x15 \x01(\tR\aendTime\x1a=\n" +
	"\x0fMonitoringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe7\x01\n" +
	"\x0fWorkflowSummary\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12\x12\n" +
	"\x04repo\x18\x04 \x01(\tR\x04repo\x12\x10\n" +
	"\x03sha\x18\x05 \x01(\tR\x03sha\x12\x1a\n" +
	"\bprovider\x18\x06 \x01(\tR\bprovider\x12\x1f\n" +
	"\vtemplate_id\x18\a \x01(\tR\n" +
	"templateId\x12\x19\n" +
	"\brun_name\x18\b \x01(\tR\arunName\"\xc2\x03\n" +
	"\x19UpdateWorkflowDataRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12:\n" +
	"\x0eload_balancers\x18\x02 \x03(\v2\x13.skip.ironbird.NodeR\rloadBalancers\x12X\n" +
	"\n" +
	"monitoring\x18\x03 \x03(\v28.skip.ironbird.UpdateWorkflowDataRequest.MonitoringEntryR\n" +
	"monitoring\x12)\n" +
	"\x05nodes\x18\x04 \x03(\v2\x13.skip.ironbird.NodeR\x05nodes\x123\n" +
	"\n" +
	"validators\x18\x05 \x03(\v2\x13.skip.ironbird.NodeR\n" +
	"validators\x123\n" +
	"\awallets\x18\x06 \x01(\v2\x19.skip.ironbird.WalletInfoR\awallets\x12\x1a\n" +
	"\bprovider\x18\a \x01(\tR\bprovider\x1a=\n" +
	"\x0fMonitoringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\x14WorkflowListResponse\x12<\n" +
	"\tworkflows\x18\x01 \x03(\v2\x1e.skip.ironbird.WorkflowSummaryR\tworkflows\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\xd1\x01\n" +
	"\x10WorkflowTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12M\n" +
	"\x0ftemplate_config\x18\x03 \x01(\v2$.skip.ironbird.CreateWorkflowRequestR\x0etemplateConfig\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\x05 \x01(\tR\tcreatedBy\"\xa0\x01\n" +
	"\x1dCreateWorkflowTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12M\n" +
	"\x0ftemplate_config\x18\x03 \x01(\v2$.skip.ironbird.CreateWorkflowRequestR\x0etemplateConfig\",\n" +
	"\x1aGetWorkflowTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"L\n" +
	"\x1cListWorkflowTemplatesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"\xa0\x01\n" +
	"\x1dUpdateWorkflowTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12M\n" +
	"\x0ftemplate_config\x18\x03 \x01(\v2$.skip.ironbird.CreateWorkflowRequestR\x0etemplateConfig\"/\n" +
	"\x1dDeleteWorkflowTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"*\n" +
	"\x18WorkflowTemplateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x87\x01\n" +
	"\x17WorkflowTemplateSummary\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\tR\tcreatedAt\x12\x1b\n" +
	"\trun_count\x18\x04 \x01(\x05R\brunCount\"z\n" +
	"\x1cWorkflowTemplateListResponse\x12D\n" +
	"\ttemplates\x18\x01 \x03(\v2&.skip.ironbird.WorkflowTemplateSummaryR\ttemplates\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"]\n" +
	"\x1eExecuteWorkflowTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03sha\x18\x02 \x01(\tR\x03sha\x12\x19\n" +
	"\brun_name\x18\x03 \x01(\tR\arunName\"\xa9\x03\n" +
	"\vTemplateRun\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x1f\n" +
	"\vtemplate_id\x18\x03 \x01(\tR\n" +
	"templateId\x12\x10\n" +
	"\x03sha\x18\x04 \x01(\tR\x03sha\x12\x19\n" +
	"\brun_name\x18\x05 \x01(\tR\arunName\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"started_at\x18\a \x01(\tR\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\b \x01(\tR\vcompletedAt\x12Z\n" +
	"\x10monitoring_links\x18\t \x03(\v2/.skip.ironbird.TemplateRun.MonitoringLinksEntryR\x0fmonitoringLinks\x12\x1a\n" +
	"\bprovider\x18\n" +
	" \x01(\tR\bprovider\x1aB\n" +
	"\x14MonitoringLinksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x1cGetTemplateRunHistoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"b\n" +
	"\x1aTemplateRunHistoryResponse\x12.\n" +
	"\x04runs\x18\x01 \x03(\v2\x1a.skip.ironbird.TemplateRunR\x04runs\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count2\x97\v\n" +
	"\x0fIronbirdService\x12Y\n" +
	"\x0eCreateWorkflow\x12$.skip.ironbird.CreateWorkflowRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12K\n" +
	"\vGetWorkflow\x12!.skip.ironbird.GetWorkflowRequest\x1a\x17.skip.ironbird.Workflow\"\x00\x12[\n" +
	"\rListWorkflows\x12#.skip.ironbird.ListWorkflowsRequest\x1a#.skip.ironbird.WorkflowListResponse\"\x00\x12Y\n" +
	"\x0eCancelWorkflow\x12$.skip.ironbird.CancelWorkflowRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12Y\n" +
	"\x0eSignalWorkflow\x12$.skip.ironbird.SignalWorkflowRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12S\n" +
	"\vRunLoadTest\x12!.skip.ironbird.RunLoadTestRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12a\n" +
	"\x12UpdateWorkflowData\x12(.skip.ironbird.UpdateWorkflowDataRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12q\n" +
	"\x16CreateWorkflowTemplate\x12,.skip.ironbird.CreateWorkflowTemplateRequest\x1a'.skip.ironbird.WorkflowTemplateResponse\"\x00\x12c\n" +
	"\x13GetWorkflowTemplate\x12).skip.ironbird.GetWorkflowTemplateRequest\x1a\x1f.skip.ironbird.WorkflowTemplate\"\x00\x12s\n" +
	"\x15ListWorkflowTemplates\x12+.skip.ironbird.ListWorkflowTemplatesRequest\x1a+.skip.ironbird.WorkflowTemplateListResponse\"\x00\x12q\n" +
	"\x16UpdateWorkflowTemplate\x12,.skip.ironbird.UpdateWorkflowTemplateRequest\x1a'.skip.ironbird.WorkflowTemplateResponse\"\x00\x12q\n" +
	"\x16DeleteWorkflowTemplate\x12,.skip.ironbird.DeleteWorkflowTemplateRequest\x1a'.skip.ironbird.WorkflowTemplateResponse\"\x00\x12k\n" +
	"\x17ExecuteWorkflowTemplate\x12-.skip.ironbird.ExecuteWorkflowTemplateRequest\x1a\x1f.skip.ironbird.WorkflowResponse\"\x00\x12q\n" +
	"\x15GetTemplateRunHistory\x12+.skip.ironbird.GetTemplateRunHistoryRequest\x1a).skip.ironbird.TemplateRunHistoryResponse\"\x00B2Z0github.com/skip-mev/ironbird/server/gen/ironbirdb\x06proto3"

var (
	file_server_proto_ironbird_proto_rawDescOnce sync.Once
	file_server_proto_ironbird_proto_rawDescData []byte
)

func file_server_proto_ironbird_proto_rawDescGZIP() []byte {
	file_server_proto_ironbird_proto_rawDescOnce.Do(func() {
		file_server_proto_ironbird_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_proto_ironbird_proto_rawDesc), len(file_server_proto_ironbird_proto_rawDesc)))
	})
	return file_server_proto_ironbird_proto_rawDescData
}

var file_server_proto_ironbird_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_server_proto_ironbird_proto_goTypes = []any{
	(*CreateWorkflowRequest)(nil),          // 0: skip.ironbird.CreateWorkflowRequest
	(*GenesisKV)(nil),                      // 1: skip.ironbird.GenesisKV
	(*RegionConfig)(nil),                   // 2: skip.ironbird.RegionConfig
	(*ChainConfig)(nil),                    // 3: skip.ironbird.ChainConfig
	(*GetWorkflowRequest)(nil),             // 4: skip.ironbird.GetWorkflowRequest
	(*ListWorkflowsRequest)(nil),           // 5: skip.ironbird.ListWorkflowsRequest
	(*CancelWorkflowRequest)(nil),          // 6: skip.ironbird.CancelWorkflowRequest
	(*SignalWorkflowRequest)(nil),          // 7: skip.ironbird.SignalWorkflowRequest
	(*RunLoadTestRequest)(nil),             // 8: skip.ironbird.RunLoadTestRequest
	(*WorkflowResponse)(nil),               // 9: skip.ironbird.WorkflowResponse
	(*Node)(nil),                           // 10: skip.ironbird.Node
	(*WalletInfo)(nil),                     // 11: skip.ironbird.WalletInfo
	(*Workflow)(nil),                       // 12: skip.ironbird.Workflow
	(*WorkflowSummary)(nil),                // 13: skip.ironbird.WorkflowSummary
	(*UpdateWorkflowDataRequest)(nil),      // 14: skip.ironbird.UpdateWorkflowDataRequest
	(*WorkflowListResponse)(nil),           // 15: skip.ironbird.WorkflowListResponse
	(*WorkflowTemplate)(nil),               // 16: skip.ironbird.WorkflowTemplate
	(*CreateWorkflowTemplateRequest)(nil),  // 17: skip.ironbird.CreateWorkflowTemplateRequest
	(*GetWorkflowTemplateRequest)(nil),     // 18: skip.ironbird.GetWorkflowTemplateRequest
	(*ListWorkflowTemplatesRequest)(nil),   // 19: skip.ironbird.ListWorkflowTemplatesRequest
	(*UpdateWorkflowTemplateRequest)(nil),  // 20: skip.ironbird.UpdateWorkflowTemplateRequest
	(*DeleteWorkflowTemplateRequest)(nil),  // 21: skip.ironbird.DeleteWorkflowTemplateRequest
	(*WorkflowTemplateResponse)(nil),       // 22: skip.ironbird.WorkflowTemplateResponse
	(*WorkflowTemplateSummary)(nil),        // 23: skip.ironbird.WorkflowTemplateSummary
	(*WorkflowTemplateListResponse)(nil),   // 24: skip.ironbird.WorkflowTemplateListResponse
	(*ExecuteWorkflowTemplateRequest)(nil), // 25: skip.ironbird.ExecuteWorkflowTemplateRequest
	(*TemplateRun)(nil),                    // 26: skip.ironbird.TemplateRun
	(*GetTemplateRunHistoryRequest)(nil),   // 27: skip.ironbird.GetTemplateRunHistoryRequest
	(*TemplateRunHistoryResponse)(nil),     // 28: skip.ironbird.TemplateRunHistoryResponse
	nil,                                    // 29: skip.ironbird.CreateWorkflowRequest.ProviderConfigEntry
	nil,                                    // 30: skip.ironbird.Workflow.MonitoringEntry
	nil,                                    // 31: skip.ironbird.UpdateWorkflowDataRequest.MonitoringEntry
	nil,                                    // 32: skip.ironbird.TemplateRun.MonitoringLinksEntry
}
var file_server_proto_ironbird_proto_depIdxs = []int32{
	3,  // 0: skip.ironbird.CreateWorkflowRequest.chain_config:type_name -> skip.ironbird.ChainConfig
	29, // 1: skip.ironbird.CreateWorkflowRequest.provider_config:type_name -> skip.ironbird.CreateWorkflowRequest.ProviderConfigEntry
	1,  // 2: skip.ironbird.ChainConfig.genesis_modifications:type_name -> skip.ironbird.GenesisKV
	2,  // 3: skip.ironbird.ChainConfig.region_configs:type_name -> skip.ironbird.RegionConfig
	10, // 4: skip.ironbird.Workflow.nodes:type_name -> skip.ironbird.Node
	10, // 5: skip.ironbird.Workflow.validators:type_name -> skip.ironbird.Node
	10, // 6: skip.ironbird.Workflow.load_balancers:type_name -> skip.ironbird.Node
	30, // 7: skip.ironbird.Workflow.monitoring:type_name -> skip.ironbird.Workflow.MonitoringEntry
	0,  // 8: skip.ironbird.Workflow.config:type_name -> skip.ironbird.CreateWorkflowRequest
	11, // 9: skip.ironbird.Workflow.wallets:type_name -> skip.ironbird.WalletInfo
	10, // 10: skip.ironbird.UpdateWorkflowDataRequest.load_balancers:type_name -> skip.ironbird.Node
	31, // 11: skip.ironbird.UpdateWorkflowDataRequest.monitoring:type_name -> skip.ironbird.UpdateWorkflowDataRequest.MonitoringEntry
	10, // 12: skip.ironbird.UpdateWorkflowDataRequest.nodes:type_name -> skip.ironbird.Node
	10, // 13: skip.ironbird.UpdateWorkflowDataRequest.validators:type_name -> skip.ironbird.Node
	11, // 14: skip.ironbird.UpdateWorkflowDataRequest.wallets:type_name -> skip.ironbird.WalletInfo
	13, // 15: skip.ironbird.WorkflowListResponse.workflows:type_name -> skip.ironbird.WorkflowSummary
	0,  // 16: skip.ironbird.WorkflowTemplate.template_config:type_name -> skip.ironbird.CreateWorkflowRequest
	0,  // 17: skip.ironbird.CreateWorkflowTemplateRequest.template_config:type_name -> skip.ironbird.CreateWorkflowRequest
	0,  // 18: skip.ironbird.UpdateWorkflowTemplateRequest.template_config:type_name -> skip.ironbird.CreateWorkflowRequest
	23, // 19: skip.ironbird.WorkflowTemplateListResponse.templates:type_name -> skip.ironbird.WorkflowTemplateSummary
	32, // 20: skip.ironbird.TemplateRun.monitoring_links:type_name -> skip.ironbird.TemplateRun.MonitoringLinksEntry
	26, // 21: skip.ironbird.TemplateRunHistoryResponse.runs:type_name -> skip.ironbird.TemplateRun
	0,  // 22: skip.ironbird.IronbirdService.CreateWorkflow:input_type -> skip.ironbird.CreateWorkflowRequest
	4,  // 23: skip.ironbird.IronbirdService.GetWorkflow:input_type -> skip.ironbird.GetWorkflowRequest
	5,  // 24: skip.ironbird.IronbirdService.ListWorkflows:input_type -> skip.ironbird.ListWorkflowsRequest
	6,  // 25: skip.ironbird.IronbirdService.CancelWorkflow:input_type -> skip.ironbird.CancelWorkflowRequest
	7,  // 26: skip.ironbird.IronbirdService.SignalWorkflow:input_type -> skip.ironbird.SignalWorkflowRequest
	8,  // 27: skip.ironbird.IronbirdService.RunLoadTest:input_type -> skip.ironbird.RunLoadTestRequest
	14, // 28: skip.ironbird.IronbirdService.UpdateWorkflowData:input_type -> skip.ironbird.UpdateWorkflowDataRequest
	17, // 29: skip.ironbird.IronbirdService.CreateWorkflowTemplate:input_type -> skip.ironbird.CreateWorkflowTemplateRequest
	18, // 30: skip.ironbird.IronbirdService.GetWorkflowTemplate:input_type -> skip.ironbird.GetWorkflowTemplateRequest
	19, // 31: skip.ironbird.IronbirdService.ListWorkflowTemplates:input_type -> skip.ironbird.ListWorkflowTemplatesRequest
	20, // 32: skip.ironbird.IronbirdService.UpdateWorkflowTemplate:input_type -> skip.ironbird.UpdateWorkflowTemplateRequest
	21, // 33: skip.ironbird.IronbirdService.DeleteWorkflowTemplate:input_type -> skip.ironbird.DeleteWorkflowTemplateRequest
	25, // 34: skip.ironbird.IronbirdService.ExecuteWorkflowTemplate:input_type -> skip.ironbird.ExecuteWorkflowTemplateRequest
	27, // 35: skip.ironbird.IronbirdService.GetTemplateRunHistory:input_type -> skip.ironbird.GetTemplateRunHistoryRequest
	9,  // 36: skip.ironbird.IronbirdService.CreateWorkflow:output_type -> skip.ironbird.WorkflowResponse
	12, // 37: skip.ironbird.IronbirdService.GetWorkflow:output_type -> skip.ironbird.Workflow
	15, // 38: skip.ironbird.IronbirdService.ListWorkflows:output_type -> skip.ironbird.WorkflowListResponse
	9,  // 39: skip.ironbird.IronbirdService.CancelWorkflow:output_type -> skip.ironbird.WorkflowResponse
	9,  // 40: skip.ironbird.IronbirdService.SignalWorkflow:output_type -> skip.ironbird.WorkflowResponse
	9,  // 41: skip.ironbird.IronbirdService.RunLoadTest:output_type -> skip.ironbird.WorkflowResponse
	9,  // 42: skip.ironbird.IronbirdService.UpdateWorkflowData:output_type -> skip.ironbird.WorkflowResponse
	22, // 43: skip.ironbird.IronbirdService.CreateWorkflowTemplate:output_type -> skip.ironbird.WorkflowTemplateResponse
	16, // 44: skip.ironbird.IronbirdService.GetWorkflowTemplate:output_type -> skip.ironbird.WorkflowTemplate
	24, // 45: skip.ironbird.IronbirdService.ListWorkflowTemplates:output_type -> skip.ironbird.WorkflowTemplateListResponse
	22, // 46: skip.ironbird.IronbirdService.UpdateWorkflowTemplate:output_type -> skip.ironbird.WorkflowTemplateResponse
	22, // 47: skip.ironbird.IronbirdService.DeleteWorkflowTemplate:output_type -> skip.ironbird.WorkflowTemplateResponse
	9,  // 48: skip.ironbird.IronbirdService.ExecuteWorkflowTemplate:output_type -> skip.ironbird.WorkflowResponse
	28, // 49: skip.ironbird.IronbirdService.GetTemplateRunHistory:output_type -> skip.ironbird.TemplateRunHistoryResponse
	36, // [36:50] is the sub-list for method output_type
	22, // [22:36] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_server_proto_ironbird_proto_init() }
func file_server_proto_ironbird_proto_init() {
	if File_server_proto_ironbird_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_proto_ironbird_proto_rawDesc), len(file_server_proto_ironbird_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_ironbird_proto_goTypes,
		DependencyIndexes: file_server_proto_ironbird_proto_depIdxs,
		MessageInfos:      file_server_proto_ironbird_proto_msgTypes,
	}.Build()
	File_server_proto_ironbird_proto = out.File
	file_server_proto_ironbird_proto_goTypes = nil
	file_server_proto_ironbird_proto_depIdxs = nil
}
