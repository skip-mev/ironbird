// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file ironbird.proto (package skip.ironbird, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file ironbird.proto.
 */
export const file_ironbird: GenFile = /*@__PURE__*/
  fileDesc("Cg5pcm9uYmlyZC5wcm90bxINc2tpcC5pcm9uYmlyZCL6AQoVQ3JlYXRlV29ya2Zsb3dSZXF1ZXN0EgwKBHJlcG8YASABKAkSCwoDc2hhGAIgASgJEhIKCmlzRXZtQ2hhaW4YAyABKAgSMAoMY2hhaW5fY29uZmlnGAQgASgLMhouc2tpcC5pcm9uYmlyZC5DaGFpbkNvbmZpZxITCgtydW5uZXJfdHlwZRgFIAEoCRIeChZlbmNvZGVkX2xvYWRfdGVzdF9zcGVjGAYgASgJEhwKFGxvbmdfcnVubmluZ190ZXN0bmV0GAggASgIEhgKEHRlc3RuZXRfZHVyYXRpb24YCSABKAkSEwoLbnVtX3dhbGxldHMYCiABKAUiJwoJR2VuZXNpc0tWEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSKjAgoLQ2hhaW5Db25maWcSDAoEbmFtZRgBIAEoCRIUCgxudW1fb2Zfbm9kZXMYAiABKAQSGQoRbnVtX29mX3ZhbGlkYXRvcnMYAyABKAQSNwoVZ2VuZXNpc19tb2RpZmljYXRpb25zGAQgAygLMhguc2tpcC5pcm9uYmlyZC5HZW5lc2lzS1YSDQoFaW1hZ2UYBSABKAkSGQoRY3VzdG9tX2FwcF9jb25maWcYBiABKAkSHwoXY3VzdG9tX2NvbnNlbnN1c19jb25maWcYByABKAkSHAoUY3VzdG9tX2NsaWVudF9jb25maWcYCCABKAkSFQoNc2V0X3NlZWRfbm9kZRgJIAEoCBIcChRzZXRfcGVyc2lzdGVudF9wZWVycxgKIAEoCCIpChJHZXRXb3JrZmxvd1JlcXVlc3QSEwoLd29ya2Zsb3dfaWQYASABKAkiNQoUTGlzdFdvcmtmbG93c1JlcXVlc3QSDQoFbGltaXQYASABKAUSDgoGb2Zmc2V0GAIgASgFIiwKFUNhbmNlbFdvcmtmbG93UmVxdWVzdBITCgt3b3JrZmxvd19pZBgBIAEoCSJBChVTaWduYWxXb3JrZmxvd1JlcXVlc3QSEwoLd29ya2Zsb3dfaWQYASABKAkSEwoLc2lnbmFsX25hbWUYAiABKAkiQQoSUnVuTG9hZFRlc3RSZXF1ZXN0EhMKC3dvcmtmbG93X2lkGAEgASgJEhYKDmxvYWRfdGVzdF9zcGVjGAIgASgJIicKEFdvcmtmbG93UmVzcG9uc2USEwoLd29ya2Zsb3dfaWQYASABKAkiTQoETm9kZRIMCgRuYW1lGAEgASgJEg8KB2FkZHJlc3MYAiABKAkSCwoDcnBjGAMgASgJEgsKA2xjZBgEIAEoCRIMCgRncnBjGAUgASgJIm0KCldhbGxldEluZm8SFgoOZmF1Y2V0X2FkZHJlc3MYASABKAkSFwoPZmF1Y2V0X21uZW1vbmljGAIgASgJEhYKDnVzZXJfYWRkcmVzc2VzGAMgAygJEhYKDnVzZXJfbW5lbW9uaWNzGAQgAygJIpMDCghXb3JrZmxvdxITCgt3b3JrZmxvd19pZBgBIAEoCRIOCgZzdGF0dXMYAiABKAkSIgoFbm9kZXMYAyADKAsyEy5za2lwLmlyb25iaXJkLk5vZGUSJwoKdmFsaWRhdG9ycxgEIAMoCzITLnNraXAuaXJvbmJpcmQuTm9kZRIrCg5sb2FkX2JhbGFuY2VycxgFIAMoCzITLnNraXAuaXJvbmJpcmQuTm9kZRI7Cgptb25pdG9yaW5nGAYgAygLMicuc2tpcC5pcm9uYmlyZC5Xb3JrZmxvdy5Nb25pdG9yaW5nRW50cnkSNAoGY29uZmlnGAcgASgLMiQuc2tpcC5pcm9uYmlyZC5DcmVhdGVXb3JrZmxvd1JlcXVlc3QSFgoObG9hZF90ZXN0X3NwZWMYESABKAkSKgoHd2FsbGV0cxgSIAEoCzIZLnNraXAuaXJvbmJpcmQuV2FsbGV0SW5mbxoxCg9Nb25pdG9yaW5nRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJlCg9Xb3JrZmxvd1N1bW1hcnkSEwoLd29ya2Zsb3dfaWQYASABKAkSDgoGc3RhdHVzGAIgASgJEhIKCnN0YXJ0X3RpbWUYAyABKAkSDAoEcmVwbxgEIAEoCRILCgNzaGEYBSABKAki1wIKGVVwZGF0ZVdvcmtmbG93RGF0YVJlcXVlc3QSEwoLd29ya2Zsb3dfaWQYASABKAkSKwoObG9hZF9iYWxhbmNlcnMYAiADKAsyEy5za2lwLmlyb25iaXJkLk5vZGUSTAoKbW9uaXRvcmluZxgDIAMoCzI4LnNraXAuaXJvbmJpcmQuVXBkYXRlV29ya2Zsb3dEYXRhUmVxdWVzdC5Nb25pdG9yaW5nRW50cnkSIgoFbm9kZXMYBCADKAsyEy5za2lwLmlyb25iaXJkLk5vZGUSJwoKdmFsaWRhdG9ycxgFIAMoCzITLnNraXAuaXJvbmJpcmQuTm9kZRIqCgd3YWxsZXRzGAYgASgLMhkuc2tpcC5pcm9uYmlyZC5XYWxsZXRJbmZvGjEKD01vbml0b3JpbmdFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIlgKFFdvcmtmbG93TGlzdFJlc3BvbnNlEjEKCXdvcmtmbG93cxgBIAMoCzIeLnNraXAuaXJvbmJpcmQuV29ya2Zsb3dTdW1tYXJ5Eg0KBWNvdW50GAIgASgFMoQFCg9Jcm9uYmlyZFNlcnZpY2USWQoOQ3JlYXRlV29ya2Zsb3cSJC5za2lwLmlyb25iaXJkLkNyZWF0ZVdvcmtmbG93UmVxdWVzdBofLnNraXAuaXJvbmJpcmQuV29ya2Zsb3dSZXNwb25zZSIAEksKC0dldFdvcmtmbG93EiEuc2tpcC5pcm9uYmlyZC5HZXRXb3JrZmxvd1JlcXVlc3QaFy5za2lwLmlyb25iaXJkLldvcmtmbG93IgASWwoNTGlzdFdvcmtmbG93cxIjLnNraXAuaXJvbmJpcmQuTGlzdFdvcmtmbG93c1JlcXVlc3QaIy5za2lwLmlyb25iaXJkLldvcmtmbG93TGlzdFJlc3BvbnNlIgASWQoOQ2FuY2VsV29ya2Zsb3cSJC5za2lwLmlyb25iaXJkLkNhbmNlbFdvcmtmbG93UmVxdWVzdBofLnNraXAuaXJvbmJpcmQuV29ya2Zsb3dSZXNwb25zZSIAElkKDlNpZ25hbFdvcmtmbG93EiQuc2tpcC5pcm9uYmlyZC5TaWduYWxXb3JrZmxvd1JlcXVlc3QaHy5za2lwLmlyb25iaXJkLldvcmtmbG93UmVzcG9uc2UiABJTCgtSdW5Mb2FkVGVzdBIhLnNraXAuaXJvbmJpcmQuUnVuTG9hZFRlc3RSZXF1ZXN0Gh8uc2tpcC5pcm9uYmlyZC5Xb3JrZmxvd1Jlc3BvbnNlIgASYQoSVXBkYXRlV29ya2Zsb3dEYXRhEiguc2tpcC5pcm9uYmlyZC5VcGRhdGVXb3JrZmxvd0RhdGFSZXF1ZXN0Gh8uc2tpcC5pcm9uYmlyZC5Xb3JrZmxvd1Jlc3BvbnNlIgBCMlowZ2l0aHViLmNvbS9za2lwLW1ldi9pcm9uYmlyZC9zZXJ2ZXIvZ2VuL2lyb25iaXJkYgZwcm90bzM");

/**
 * @generated from message skip.ironbird.CreateWorkflowRequest
 */
export type CreateWorkflowRequest = Message<"skip.ironbird.CreateWorkflowRequest"> & {
  /**
   * @generated from field: string repo = 1;
   */
  repo: string;

  /**
   * @generated from field: string sha = 2;
   */
  sha: string;

  /**
   * @generated from field: bool isEvmChain = 3;
   */
  isEvmChain: boolean;

  /**
   * @generated from field: skip.ironbird.ChainConfig chain_config = 4;
   */
  chainConfig?: ChainConfig;

  /**
   * @generated from field: string runner_type = 5;
   */
  runnerType: string;

  /**
   * json encoded loadtest spec.
   *
   * @generated from field: string encoded_load_test_spec = 6;
   */
  encodedLoadTestSpec: string;

  /**
   * @generated from field: bool long_running_testnet = 8;
   */
  longRunningTestnet: boolean;

  /**
   * @generated from field: string testnet_duration = 9;
   */
  testnetDuration: string;

  /**
   * @generated from field: int32 num_wallets = 10;
   */
  numWallets: number;
};

/**
 * Describes the message skip.ironbird.CreateWorkflowRequest.
 * Use `create(CreateWorkflowRequestSchema)` to create a new message.
 */
export const CreateWorkflowRequestSchema: GenMessage<CreateWorkflowRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 0);

/**
 * @generated from message skip.ironbird.GenesisKV
 */
export type GenesisKV = Message<"skip.ironbird.GenesisKV"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message skip.ironbird.GenesisKV.
 * Use `create(GenesisKVSchema)` to create a new message.
 */
export const GenesisKVSchema: GenMessage<GenesisKV> = /*@__PURE__*/
  messageDesc(file_ironbird, 1);

/**
 * @generated from message skip.ironbird.ChainConfig
 */
export type ChainConfig = Message<"skip.ironbird.ChainConfig"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: uint64 num_of_nodes = 2;
   */
  numOfNodes: bigint;

  /**
   * @generated from field: uint64 num_of_validators = 3;
   */
  numOfValidators: bigint;

  /**
   * @generated from field: repeated skip.ironbird.GenesisKV genesis_modifications = 4;
   */
  genesisModifications: GenesisKV[];

  /**
   * @generated from field: string image = 5;
   */
  image: string;

  /**
   * @generated from field: string custom_app_config = 6;
   */
  customAppConfig: string;

  /**
   * @generated from field: string custom_consensus_config = 7;
   */
  customConsensusConfig: string;

  /**
   * @generated from field: string custom_client_config = 8;
   */
  customClientConfig: string;

  /**
   * @generated from field: bool set_seed_node = 9;
   */
  setSeedNode: boolean;

  /**
   * @generated from field: bool set_persistent_peers = 10;
   */
  setPersistentPeers: boolean;
};

/**
 * Describes the message skip.ironbird.ChainConfig.
 * Use `create(ChainConfigSchema)` to create a new message.
 */
export const ChainConfigSchema: GenMessage<ChainConfig> = /*@__PURE__*/
  messageDesc(file_ironbird, 2);

/**
 * @generated from message skip.ironbird.GetWorkflowRequest
 */
export type GetWorkflowRequest = Message<"skip.ironbird.GetWorkflowRequest"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;
};

/**
 * Describes the message skip.ironbird.GetWorkflowRequest.
 * Use `create(GetWorkflowRequestSchema)` to create a new message.
 */
export const GetWorkflowRequestSchema: GenMessage<GetWorkflowRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 3);

/**
 * @generated from message skip.ironbird.ListWorkflowsRequest
 */
export type ListWorkflowsRequest = Message<"skip.ironbird.ListWorkflowsRequest"> & {
  /**
   * @generated from field: int32 limit = 1;
   */
  limit: number;

  /**
   * @generated from field: int32 offset = 2;
   */
  offset: number;
};

/**
 * Describes the message skip.ironbird.ListWorkflowsRequest.
 * Use `create(ListWorkflowsRequestSchema)` to create a new message.
 */
export const ListWorkflowsRequestSchema: GenMessage<ListWorkflowsRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 4);

/**
 * @generated from message skip.ironbird.CancelWorkflowRequest
 */
export type CancelWorkflowRequest = Message<"skip.ironbird.CancelWorkflowRequest"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;
};

/**
 * Describes the message skip.ironbird.CancelWorkflowRequest.
 * Use `create(CancelWorkflowRequestSchema)` to create a new message.
 */
export const CancelWorkflowRequestSchema: GenMessage<CancelWorkflowRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 5);

/**
 * @generated from message skip.ironbird.SignalWorkflowRequest
 */
export type SignalWorkflowRequest = Message<"skip.ironbird.SignalWorkflowRequest"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;

  /**
   * @generated from field: string signal_name = 2;
   */
  signalName: string;
};

/**
 * Describes the message skip.ironbird.SignalWorkflowRequest.
 * Use `create(SignalWorkflowRequestSchema)` to create a new message.
 */
export const SignalWorkflowRequestSchema: GenMessage<SignalWorkflowRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 6);

/**
 * @generated from message skip.ironbird.RunLoadTestRequest
 */
export type RunLoadTestRequest = Message<"skip.ironbird.RunLoadTestRequest"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;

  /**
   * @generated from field: string load_test_spec = 2;
   */
  loadTestSpec: string;
};

/**
 * Describes the message skip.ironbird.RunLoadTestRequest.
 * Use `create(RunLoadTestRequestSchema)` to create a new message.
 */
export const RunLoadTestRequestSchema: GenMessage<RunLoadTestRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 7);

/**
 * @generated from message skip.ironbird.WorkflowResponse
 */
export type WorkflowResponse = Message<"skip.ironbird.WorkflowResponse"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;
};

/**
 * Describes the message skip.ironbird.WorkflowResponse.
 * Use `create(WorkflowResponseSchema)` to create a new message.
 */
export const WorkflowResponseSchema: GenMessage<WorkflowResponse> = /*@__PURE__*/
  messageDesc(file_ironbird, 8);

/**
 * @generated from message skip.ironbird.Node
 */
export type Node = Message<"skip.ironbird.Node"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * @generated from field: string rpc = 3;
   */
  rpc: string;

  /**
   * @generated from field: string lcd = 4;
   */
  lcd: string;

  /**
   * @generated from field: string grpc = 5;
   */
  grpc: string;
};

/**
 * Describes the message skip.ironbird.Node.
 * Use `create(NodeSchema)` to create a new message.
 */
export const NodeSchema: GenMessage<Node> = /*@__PURE__*/
  messageDesc(file_ironbird, 9);

/**
 * @generated from message skip.ironbird.WalletInfo
 */
export type WalletInfo = Message<"skip.ironbird.WalletInfo"> & {
  /**
   * @generated from field: string faucet_address = 1;
   */
  faucetAddress: string;

  /**
   * @generated from field: string faucet_mnemonic = 2;
   */
  faucetMnemonic: string;

  /**
   * @generated from field: repeated string user_addresses = 3;
   */
  userAddresses: string[];

  /**
   * @generated from field: repeated string user_mnemonics = 4;
   */
  userMnemonics: string[];
};

/**
 * Describes the message skip.ironbird.WalletInfo.
 * Use `create(WalletInfoSchema)` to create a new message.
 */
export const WalletInfoSchema: GenMessage<WalletInfo> = /*@__PURE__*/
  messageDesc(file_ironbird, 10);

/**
 * @generated from message skip.ironbird.Workflow
 */
export type Workflow = Message<"skip.ironbird.Workflow"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;

  /**
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * @generated from field: repeated skip.ironbird.Node nodes = 3;
   */
  nodes: Node[];

  /**
   * @generated from field: repeated skip.ironbird.Node validators = 4;
   */
  validators: Node[];

  /**
   * @generated from field: repeated skip.ironbird.Node load_balancers = 5;
   */
  loadBalancers: Node[];

  /**
   * @generated from field: map<string, string> monitoring = 6;
   */
  monitoring: { [key: string]: string };

  /**
   * @generated from field: skip.ironbird.CreateWorkflowRequest config = 7;
   */
  config?: CreateWorkflowRequest;

  /**
   * @generated from field: string load_test_spec = 17;
   */
  loadTestSpec: string;

  /**
   * @generated from field: skip.ironbird.WalletInfo wallets = 18;
   */
  wallets?: WalletInfo;
};

/**
 * Describes the message skip.ironbird.Workflow.
 * Use `create(WorkflowSchema)` to create a new message.
 */
export const WorkflowSchema: GenMessage<Workflow> = /*@__PURE__*/
  messageDesc(file_ironbird, 11);

/**
 * @generated from message skip.ironbird.WorkflowSummary
 */
export type WorkflowSummary = Message<"skip.ironbird.WorkflowSummary"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;

  /**
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * @generated from field: string start_time = 3;
   */
  startTime: string;

  /**
   * @generated from field: string repo = 4;
   */
  repo: string;

  /**
   * @generated from field: string sha = 5;
   */
  sha: string;
};

/**
 * Describes the message skip.ironbird.WorkflowSummary.
 * Use `create(WorkflowSummarySchema)` to create a new message.
 */
export const WorkflowSummarySchema: GenMessage<WorkflowSummary> = /*@__PURE__*/
  messageDesc(file_ironbird, 12);

/**
 * @generated from message skip.ironbird.UpdateWorkflowDataRequest
 */
export type UpdateWorkflowDataRequest = Message<"skip.ironbird.UpdateWorkflowDataRequest"> & {
  /**
   * @generated from field: string workflow_id = 1;
   */
  workflowId: string;

  /**
   * @generated from field: repeated skip.ironbird.Node load_balancers = 2;
   */
  loadBalancers: Node[];

  /**
   * @generated from field: map<string, string> monitoring = 3;
   */
  monitoring: { [key: string]: string };

  /**
   * @generated from field: repeated skip.ironbird.Node nodes = 4;
   */
  nodes: Node[];

  /**
   * @generated from field: repeated skip.ironbird.Node validators = 5;
   */
  validators: Node[];

  /**
   * @generated from field: skip.ironbird.WalletInfo wallets = 6;
   */
  wallets?: WalletInfo;
};

/**
 * Describes the message skip.ironbird.UpdateWorkflowDataRequest.
 * Use `create(UpdateWorkflowDataRequestSchema)` to create a new message.
 */
export const UpdateWorkflowDataRequestSchema: GenMessage<UpdateWorkflowDataRequest> = /*@__PURE__*/
  messageDesc(file_ironbird, 13);

/**
 * @generated from message skip.ironbird.WorkflowListResponse
 */
export type WorkflowListResponse = Message<"skip.ironbird.WorkflowListResponse"> & {
  /**
   * @generated from field: repeated skip.ironbird.WorkflowSummary workflows = 1;
   */
  workflows: WorkflowSummary[];

  /**
   * @generated from field: int32 count = 2;
   */
  count: number;
};

/**
 * Describes the message skip.ironbird.WorkflowListResponse.
 * Use `create(WorkflowListResponseSchema)` to create a new message.
 */
export const WorkflowListResponseSchema: GenMessage<WorkflowListResponse> = /*@__PURE__*/
  messageDesc(file_ironbird, 14);

/**
 * @generated from service skip.ironbird.IronbirdService
 */
export const IronbirdService: GenService<{
  /**
   * @generated from rpc skip.ironbird.IronbirdService.CreateWorkflow
   */
  createWorkflow: {
    methodKind: "unary";
    input: typeof CreateWorkflowRequestSchema;
    output: typeof WorkflowResponseSchema;
  },
  /**
   * @generated from rpc skip.ironbird.IronbirdService.GetWorkflow
   */
  getWorkflow: {
    methodKind: "unary";
    input: typeof GetWorkflowRequestSchema;
    output: typeof WorkflowSchema;
  },
  /**
   * @generated from rpc skip.ironbird.IronbirdService.ListWorkflows
   */
  listWorkflows: {
    methodKind: "unary";
    input: typeof ListWorkflowsRequestSchema;
    output: typeof WorkflowListResponseSchema;
  },
  /**
   * @generated from rpc skip.ironbird.IronbirdService.CancelWorkflow
   */
  cancelWorkflow: {
    methodKind: "unary";
    input: typeof CancelWorkflowRequestSchema;
    output: typeof WorkflowResponseSchema;
  },
  /**
   * @generated from rpc skip.ironbird.IronbirdService.SignalWorkflow
   */
  signalWorkflow: {
    methodKind: "unary";
    input: typeof SignalWorkflowRequestSchema;
    output: typeof WorkflowResponseSchema;
  },
  /**
   * @generated from rpc skip.ironbird.IronbirdService.RunLoadTest
   */
  runLoadTest: {
    methodKind: "unary";
    input: typeof RunLoadTestRequestSchema;
    output: typeof WorkflowResponseSchema;
  },
  /**
   * @generated from rpc skip.ironbird.IronbirdService.UpdateWorkflowData
   */
  updateWorkflowData: {
    methodKind: "unary";
    input: typeof UpdateWorkflowDataRequestSchema;
    output: typeof WorkflowResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_ironbird, 0);

